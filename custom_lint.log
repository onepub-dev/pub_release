[ReorderMembersFix] 2025-10-19T11:24:30.977291 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:30.977291 ConflictingEditException: {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"} conflicts with {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"}
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:30.977291 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:30.977291
[ReorderMembersFix] 2025-10-19T11:24:30.977727 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:30.977727 ConflictingEditException: {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"} conflicts with {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:30.977727 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:30.977727
[ReorderMembersFix] 2025-10-19T11:24:30.977914 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:30.977914 ConflictingEditException: {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"} conflicts with {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"}
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:30.977914 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:30.977914
[ReorderMembersFix] 2025-10-19T11:24:30.978091 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:30.978091 ConflictingEditException: {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"} conflicts with {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"}
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:30.978091 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:30.978091
[ReorderMembersFix] 2025-10-19T11:24:30.978307 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:30.978307 ConflictingEditException: {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"} conflicts with {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:30.978307 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:30.978307
[ReorderMembersFix] 2025-10-19T11:24:30.978577 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:30.978577 ConflictingEditException: {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"} conflicts with {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"}
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:30.978577 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:30.978577
[ReorderMembersFix] 2025-10-19T11:24:31.259700 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:31.259700 ConflictingEditException: {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"} conflicts with {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"}
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:31.259700 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:31.259700
[ReorderMembersFix] 2025-10-19T11:24:31.260224 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:31.260224 ConflictingEditException: {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"} conflicts with {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:31.260224 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:31.260224
[ReorderMembersFix] 2025-10-19T11:24:31.260461 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:31.260461 ConflictingEditException: {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"} conflicts with {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"}
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:31.260461 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:31.260461
[ReorderMembersFix] 2025-10-19T11:24:31.261426 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:31.261426 ConflictingEditException: {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"} conflicts with {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"}
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:31.261426 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:31.261426
[ReorderMembersFix] 2025-10-19T11:24:31.261640 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:31.261640 ConflictingEditException: {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"} conflicts with {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:31.261640 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:31.261640
[ReorderMembersFix] 2025-10-19T11:24:31.261787 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:31.261787 ConflictingEditException: {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"} conflicts with {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"}
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:31.261787 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:31.261787
[ReorderMembersFix] 2025-10-19T11:24:32.396336 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:32.396336 ConflictingEditException: {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"} conflicts with {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"}
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:32.396336 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:32.396336
[ReorderMembersFix] 2025-10-19T11:24:32.397003 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:32.397003 ConflictingEditException: {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"} conflicts with {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:32.397003 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:32.397003
[ReorderMembersFix] 2025-10-19T11:24:32.397234 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:32.397234 ConflictingEditException: {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"} conflicts with {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"}
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:32.397234 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:32.397234
[ReorderMembersFix] 2025-10-19T11:24:32.397735 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:32.397735 ConflictingEditException: {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"} conflicts with {"offset":3845,"length":54,"replacement":"  String message;\n\n  PubReleaseException(this.message);"}
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:32.397735 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:32.397735
[ReorderMembersFix] 2025-10-19T11:24:32.398307 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:32.398307 ConflictingEditException: {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"} conflicts with {"offset":656,"length":2989,"replacement":"  static const filename = 'pubrelease_multi.yaml';\n\n  static final pathToYaml = join(homeProjectPath, 'tool', filename);\n\n  final packages = <Package>[];\n\n  static String? _pathToHomeProject;\n\n  /// Load the pubrelease_multi.yaml into memory.\n  /// [pathTo] is intended for aiding with unit testing by allowing\n  /// the test to pass an alternate path. Normally [pathTo] should not\n  /// be passed as the file will be loaded from its default location.\n  /// If you pass [pathTo] it must include the filename.\n  MultiSettings.load({String? pathTo}) {\n    pathTo ??= pathToYaml;\n    final settings = SettingsYaml.load(pathToSettings: pathTo);\n\n    for (final entry in settings.valueMap.entries) {\n      final package =\n          Package(entry.key, truepath(homeProjectPath, entry.value as String));\n      if (!exists(package.path)) {\n        throw PubReleaseException(\n            'The path ${package.path} for ${package.name} does not exist.');\n      }\n\n      if (!exists(join(package.path, 'pubspec.yaml'))) {\n        throw PubReleaseException(\n            'The pubspec.yaml for ${package.name} does not exist.');\n      }\n\n      packages.add(package);\n    }\n  }\n\n  static set homeProjectPath(String pathToHomeProject) =>\n      _pathToHomeProject = pathToHomeProject;\n\n  static String get homeProjectPath =>\n      _pathToHomeProject ?? DartProject.fromPath('.').pathToProjectRoot;\n\n  bool hasDependencies() => packages.isNotEmpty;\n\n  bool containsPackage(String packageName) {\n    var found = false;\n\n    for (final package in packages) {\n      if (package.name == packageName) {\n        found = true;\n        break;\n      }\n    }\n    return found;\n  }\n\n  bool validate() {\n    var valid = true;\n    try {\n      for (final package in packages) {\n        if (!exists(package.path)) {\n          throw PubReleaseException(\n              'The path ${package.path} for ${package.name} does not exist.');\n        }\n\n        if (!exists(join(package.path, 'pubspec.yaml'))) {\n          throw PubReleaseException(\n              'The pubspec.yaml for ${package.name} does not exist.');\n        }\n      }\n    } on PubReleaseException catch (e) {\n      valid = false;\n      print(e);\n    }\n    return valid;\n  }\n\n  static bool yamlExists() => exists(pathToYaml);\n\n  /// When releasing we need to ensure that the version no. of any package\n  /// is higher than the previously released package no.\n  /// So we need to find the highest version no. from all of the packages.\n  Version getHighestVersion() {\n    final lowest = Version.parse('0.0.1-dev.0');\n    var highestVersion = lowest;\n\n    for (final package in packages) {\n      final pubspec = PubSpec.loadFromPath(join(package.path, 'pubspec.yaml'));\n      if (pubspec.version.semVersion.compareTo(highestVersion) > 0) {\n        highestVersion = pubspec.version.semVersion;\n      }\n    }\n\n    /// If no package had a version no.\n    if (highestVersion == lowest) {\n      highestVersion = Version.parse('0.0.1');\n    }\n\n    return highestVersion;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:32.398307 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:32.398307
[ReorderMembersFix] 2025-10-19T11:24:32.398530 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/multi_settings.dart:
[ReorderMembersFix] 2025-10-19T11:24:32.398530 ConflictingEditException: {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"} conflicts with {"offset":3665,"length":127,"replacement":"  String name;\n\n  /// The truepath to the packages location on the file system.\n  String path;\n\n  Package(this.name, this.path);"}
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:32.398530 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:32.398530
[ReorderMembersFix] 2025-10-19T11:24:35.382618 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/release_runner.dart:
[ReorderMembersFix] 2025-10-19T11:24:35.382618 ConflictingEditException: {"offset":14514,"length":466,"replacement":"  PubSpec pubspec;\n\n  String path;\n\n  PubSpecDetails(this.pubspec, this.path);\n\n  /// Removes all of the dependency_overrides for each of the packages\n  /// listed in the pubrelease_multi.yaml file.\n  void removeOverrides() {\n    pubspec\n      ..dependencyOverrides.removeAll()\n      ..saveTo(path);\n\n    /// pause for a moment incase an IDE is monitoring the pubspec.yaml\n    /// changes. If we move too soon the .dart_tools directory may not exist.\n    sleep(2);\n  }"} conflicts with {"offset":14514,"length":466,"replacement":"  PubSpec pubspec;\n\n  String path;\n\n  PubSpecDetails(this.pubspec, this.path);\n\n  /// Removes all of the dependency_overrides for each of the packages\n  /// listed in the pubrelease_multi.yaml file.\n  void removeOverrides() {\n    pubspec\n      ..dependencyOverrides.removeAll()\n      ..saveTo(path);\n\n    /// pause for a moment incase an IDE is monitoring the pubspec.yaml\n    /// changes. If we move too soon the .dart_tools directory may not exist.\n    sleep(2);\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:35.382618 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:35.382618
[ReorderMembersFix] 2025-10-19T11:24:35.382983 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/release_runner.dart:
[ReorderMembersFix] 2025-10-19T11:24:35.382983 ConflictingEditException: {"offset":654,"length":13614,"replacement":"  String pathToPackageRoot;\n\n  /// git books writes out changelog.md as lower case. We also have the issue\n  /// that on Windows file names are case insensitive.\n  /// As such we look for both versions given the upper case version precedence.\n  late final changeLogPathUpper = join(pathToPackageRoot, 'CHANGELOG.md');\n\n  late final changeLogPathLower = join(pathToPackageRoot, 'changelog.md');\n\n  ReleaseRunner(this.pathToPackageRoot);\n\n  Future<bool> pubRelease({\n    required PubSpecDetails pubSpecDetails,\n    required VersionMethod versionMethod,\n    required int lineLength,\n    required bool format,\n    required bool dryrun,\n    required bool runTests,\n    required bool autoAnswer,\n    required String? tags,\n    required String? excludeTags,\n    required bool useGit,\n    sm.Version? setVersion,\n  }) async {\n    var success = false;\n    await doRun(\n        dryrun: dryrun,\n        runRelease: () async {\n          final projectRootPath = dirname(pubSpecDetails.path);\n\n          final newVersion = determineAndUpdateVersion(\n              versionMethod, setVersion, pubSpecDetails,\n              dryrun: dryrun);\n\n          runPubGet(projectRootPath);\n\n          if (runTests) {\n            if (!doRunTests(projectRootPath,\n                tags: tags, excludeTags: excludeTags)) {\n              throw UnitTestFailedException(\n                  'Some unit tests failed. Release has been halted.');\n            }\n          }\n\n          final usingGit = useGit && gitChecks(projectRootPath);\n\n          runPreReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n          prepareReleaseNotes(projectRootPath, newVersion,\n              pubSpecDetails.pubspec.version.semVersion,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n          prepareCode(projectRootPath, lineLength,\n              format: format, usingGit: usingGit);\n\n          commitRelease(newVersion, projectRootPath,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n\n          // protect the pubspec.yaml as need to remove the\n          // overrides\n          await withFileProtectionAsync([pubSpecDetails.path], () async {\n            pubSpecDetails.removeOverrides();\n            success = publish(pubSpecDetails.path,\n                autoAnswer: autoAnswer, dryrun: dryrun);\n          });\n\n          runPostReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n\n          if (!success) {\n            printerr(red('The publish attempt failed.'));\n          }\n        });\n\n    return success;\n  }\n\n  /// Run pub get to ensure that the project is in a runnable state.\n  /// This may result in pubspec.lock being updated and\n  /// as we don't allow the project to have any uncommited files\n  /// we need to commit it.\n  /// It will almost certainly change if we are doing a multi-package\n  /// release as the dependencies we are releasing will have their version\n  /// no.s changed.\n  void runPubGet(String projectRootPath) {\n    if (DartSdk().isPubGetRequired(projectRootPath)) {\n      /// Make certain the project is in a state that we can run it.\n      print(blue(\"Running 'pub get' to ensure package is ready to publish\"));\n      DartSdk().runPubGet(projectRootPath, progress: Progress.devNull());\n    }\n  }\n\n  bool gitChecks(String projectRootPath) {\n    final git = Git(projectRootPath);\n    final usingGit = git.usingGit;\n    if (usingGit) {\n      print('Found git project.');\n      // we do a premptive git pull as we won't be able to do a push\n      // at the end if we are behind head.\n      if (git.hasRemote) {\n        git.pull();\n      } else {\n        print(orange('Skipping git pull as no remote has been defined.'));\n      }\n\n      // print('Checking files are committed.');\n      // git.checkAllFilesCommited();\n    }\n\n    return usingGit;\n  }\n\n  void prepareReleaseNotes(\n      String projectRootPath, sm.Version newVersion, sm.Version? currentVersion,\n      {required bool usingGit,\n      required bool autoAnswer,\n      required bool dryrun}) {\n    /// the change log is backed up as part of the dry run\n    /// and restored afterwoods.\n    if (!doReleaseNotesExist(newVersion)) {\n      print('Generating release notes.');\n      generateReleaseNotes(newVersion, currentVersion,\n          autoAnswer: autoAnswer, dryrun: dryrun);\n      if (!dryrun && usingGit) {\n        // final git = Git(projectRootPath);\n        // print('Committing release notes and versioned files');\n        // git.commitVersion(\"Released $newVersion\");\n\n        // if (git.hasRemote) {\n        //   git.push();\n        // }\n      }\n    }\n    //}\n  }\n\n  /// checks the change log to see if the release notes for [version]\n  /// have already been generated.\n  bool doReleaseNotesExist(sm.Version version) {\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n    final note = '# $version';\n\n    return read(changeLogPath).toList().join('\\n').contains(note);\n  }\n\n  /// Ensure that all code is correctly formatted.\n  /// and that it passes all tests.\n  void prepareCode(String projectRootPath, int lineLength,\n      {required bool format, required bool usingGit}) {\n    // ensure that all code is correctly formatted.\n    if (format) {\n      _formatCode(projectRootPath, usingGit: usingGit, lineLength: lineLength);\n    }\n\n    final progress = start('dart analyze',\n        workingDirectory: projectRootPath,\n        nothrow: true,\n        progress: Progress.print());\n    if (progress.exitCode != 0) {\n      printerr(\n          red('dart analyze failed. Please fix the errors and try again.'));\n      io.exit(1);\n    }\n  }\n\n  sm.Version determineAndUpdateVersion(\n    VersionMethod versionMethod,\n    sm.Version? passedVersion,\n    PubSpecDetails pubspecDetails, {\n    required bool dryrun,\n  }) {\n    var newVersion = passedVersion ?? pubspecDetails.pubspec.version.semVersion;\n\n    if (versionMethod == VersionMethod.set) {\n      // we were passed the new version so just updated everything.\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    } else {\n      // Ask the user for the new version\n      newVersion = askForVersion(pubspecDetails.pubspec.version.semVersion);\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    }\n    return newVersion;\n  }\n\n  void _formatCode(String projectRootPath,\n      {required bool usingGit, required int lineLength}) {\n    // ensure that all code is correctly formatted.\n    print('Formatting code...');\n\n    _formatCodeInDirectory(\n        join(projectRootPath, 'bin'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'lib'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'test'), usingGit, lineLength, projectRootPath);\n  }\n\n  void _formatCodeInDirectory(\n      String srcPath, bool usingGit, int lineLength, String workingDirectory) {\n    final output = <String>[];\n\n    if (exists(srcPath) && !isEmpty(srcPath)) {\n      'dart format --summary none --line-length=$lineLength $srcPath'\n          .forEach(output.add, stderr: print);\n\n      if (usingGit) {\n        for (final line in output) {\n          if (line.startsWith('Formatted')) {\n            final filePath = line.substring('Formatted '.length);\n            'git add ${join(srcPath, filePath)}'\n                .start(workingDirectory: workingDirectory);\n          }\n        }\n      }\n    }\n  }\n\n  bool publish(String pubspecPath,\n      {required bool autoAnswer, required bool dryrun}) {\n    final projectRoot = dirname(pubspecPath);\n\n    final version = sm.Version.parse(io.Platform.version.split(' ')[0]);\n    var cmd = 'dart pub publish';\n    if (version.major == 2 && version.minor < 9) {\n      cmd = 'pub publish';\n    }\n\n    if (dryrun) {\n      cmd += ' --dry-run';\n    }\n    if (autoAnswer && !dryrun) {\n      cmd += ' --force';\n    }\n\n    // if (!waitForEx(cli.check(cmd, workingDirectory: projectRoot))) {\n    //   throw PubReleaseException('The publish attempt failed.');\n    // }\n\n    final progress = cmd.start(\n        terminal: true,\n        workingDirectory: projectRoot,\n        progress: Progress.print(),\n        nothrow: true);\n\n    return progress.exitCode == 0;\n  }\n\n  String get changeLogPath {\n    if (exists(changeLogPathUpper)) {\n      return changeLogPathUpper;\n    } else if (exists(changeLogPathLower)) {\n      return changeLogPathLower;\n    }\n    return changeLogPathUpper;\n  }\n\n  void generateReleaseNotes(sm.Version? newVersion, sm.Version? currentVersion,\n      {required bool autoAnswer, required bool dryrun}) {\n    // see https://blogs.sap.com/2018/06/22/generating-release-notes-from-git-commit-messages-using-basic-shell-commands-gitgrep/\n    // for better ideas.\n\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n\n    /// we use a .md as then user can preview the mark down.\n    final tmpReleaseNotes = join(pathToPackageRoot, 'release.notes.tmp.md');\n    // ignore: cascade_invocations\n    tmpReleaseNotes.write('# $newVersion');\n    final git = Git(pathToPackageRoot);\n    final usingGit = git.usingGit;\n\n    /// add commit messages to release notes.\n    if (usingGit) {\n      final lastTag = git.getLatestTag();\n\n      // just the messages from each commit\n      final messages = git.getCommitMessages(lastTag);\n\n      for (final message in messages) {\n        tmpReleaseNotes.append('- $message');\n      }\n      tmpReleaseNotes.append('');\n    }\n\n    /// append the changelog to the new release notes\n    read(changeLogPath).toList().forEach(tmpReleaseNotes.append);\n\n    // give the user a chance to clean up the change log.\n    if (!autoAnswer &&\n        !dryrun &&\n        confirm('Would you like to edit the $changeLogPath notes')) {\n      showEditor(tmpReleaseNotes);\n    }\n\n    // write the edited commit messages to the change log.\n    final backup = '$changeLogPath.bak';\n\n    /// move the change log out of the way.\n    move(changeLogPath, backup);\n\n    /// replace the newly updated change log over the old one.\n    move(tmpReleaseNotes, changeLogPath);\n\n    delete(backup);\n  }\n\n  /// checks with the user that we are operating on the correct package\n  /// and returns details of the packages pubspec.yaml.\n  ///\n  /// Also prints the version of the package we found.\n  ///\n  /// If [autoAnswer] is false we don't ask the user to confirm the package.\n  PubSpecDetails checkPackage({required bool autoAnswer}) {\n    final pubspecPath = findPubSpec(startingDir: pathToPackageRoot);\n    if (pubspecPath == null) {\n      print('Unable to find pubspec.yaml, run ${DartScript.self.exeName} '\n          'from the main '\n          \"package's root directory.\");\n      io.exit(1);\n    }\n\n    final pubspec = PubSpec.loadFromPath(pubspecPath);\n\n    pubspec.version.setSemVersion(pubspec.version.semVersion == sm.Version.none\n        ? sm.Version.parse('0.0.1')\n        : pubspec.version.semVersion);\n\n    print('');\n    print(green('Found ${pubspec.name.value} version ${pubspec.version}'));\n\n    print('');\n\n    return PubSpecDetails(pubspec, pubspecPath);\n  }\n\n  void commitRelease(\n    sm.Version newVersion,\n    String workingDirectory, {\n    required bool usingGit,\n    required bool autoAnswer,\n    required bool dryrun,\n  }) {\n    if (usingGit && !dryrun) {\n      final git = Git(workingDirectory);\n      print('Commiting all modified files.');\n      git\n        ..commitAll('Released $newVersion.')\n        ..pushReleaseTag(newVersion, autoAnswer: autoAnswer);\n    }\n  }\n\n  /// Runs the release process.\n  /// If we are running a dry run we back up key files that we have\n  /// to change for the pub.dev publish dry run to work but\n  /// which we don't actually want to changes as we are doing a dry run.\n  /// At the end of the dry run we restore these key files.\n  Future<void> doRun(\n      {required bool dryrun, required void Function() runRelease}) async {\n    if (dryrun) {\n      await withFileProtectionAsync([\n        join(pathToPackageRoot, 'pubspec.yaml'),\n        changeLogPath,\n        versionLibraryPath(pathToPackageRoot),\n      ], () async {\n        runRelease();\n      });\n    } else {\n      runRelease();\n    }\n  }\n\n  bool doRunTests(String projectRootPath,\n      {required String? tags, required String? excludeTags}) {\n    if (which('critical_test').notfound) {\n      print(blue('Installing dart package critical_test'));\n      'dart pub global activate critical_test'\n          .start(progress: Progress.printStdErr());\n    }\n    if (which('critical_test').notfound) {\n      printerr(\n          red('Please install the dart package critical_test and try again. '\n              '\"dart pub global activate critical_test\"'));\n      io.exit(1);\n    }\n    // critical_test generates a file to track failed tests\n    // add it to .gitignore so it doesn't look like an uncommitted\n    // file.\n    Git(projectRootPath).addGitIgnore('.failed_tracker');\n\n    var success = true;\n\n    if (!exists(join(projectRootPath, 'test'))) {\n      print(orange('No tests found in ${relative(projectRootPath)} skipping'));\n    } else {\n      final progress = startFromArgs(\n          exeName('critical_test'),\n          [\n            if (Settings().isVerbose) '-v',\n            if (tags != null) '--tags=$tags',\n            if (excludeTags != null) '--exclude-tags=$excludeTags',\n          ],\n          terminal: true,\n          workingDirectory: projectRootPath,\n          nothrow: true);\n\n      /// exitCode 5 means no test ran.\n      success = progress.exitCode == 0 || progress.exitCode == 5;\n      if (success) {\n        print(green('All unit tests passed.'));\n      }\n    }\n    return success;\n  }"} conflicts with {"offset":654,"length":13614,"replacement":"  String pathToPackageRoot;\n\n  /// git books writes out changelog.md as lower case. We also have the issue\n  /// that on Windows file names are case insensitive.\n  /// As such we look for both versions given the upper case version precedence.\n  late final changeLogPathUpper = join(pathToPackageRoot, 'CHANGELOG.md');\n\n  late final changeLogPathLower = join(pathToPackageRoot, 'changelog.md');\n\n  ReleaseRunner(this.pathToPackageRoot);\n\n  Future<bool> pubRelease({\n    required PubSpecDetails pubSpecDetails,\n    required VersionMethod versionMethod,\n    required int lineLength,\n    required bool format,\n    required bool dryrun,\n    required bool runTests,\n    required bool autoAnswer,\n    required String? tags,\n    required String? excludeTags,\n    required bool useGit,\n    sm.Version? setVersion,\n  }) async {\n    var success = false;\n    await doRun(\n        dryrun: dryrun,\n        runRelease: () async {\n          final projectRootPath = dirname(pubSpecDetails.path);\n\n          final newVersion = determineAndUpdateVersion(\n              versionMethod, setVersion, pubSpecDetails,\n              dryrun: dryrun);\n\n          runPubGet(projectRootPath);\n\n          if (runTests) {\n            if (!doRunTests(projectRootPath,\n                tags: tags, excludeTags: excludeTags)) {\n              throw UnitTestFailedException(\n                  'Some unit tests failed. Release has been halted.');\n            }\n          }\n\n          final usingGit = useGit && gitChecks(projectRootPath);\n\n          runPreReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n          prepareReleaseNotes(projectRootPath, newVersion,\n              pubSpecDetails.pubspec.version.semVersion,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n          prepareCode(projectRootPath, lineLength,\n              format: format, usingGit: usingGit);\n\n          commitRelease(newVersion, projectRootPath,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n\n          // protect the pubspec.yaml as need to remove the\n          // overrides\n          await withFileProtectionAsync([pubSpecDetails.path], () async {\n            pubSpecDetails.removeOverrides();\n            success = publish(pubSpecDetails.path,\n                autoAnswer: autoAnswer, dryrun: dryrun);\n          });\n\n          runPostReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n\n          if (!success) {\n            printerr(red('The publish attempt failed.'));\n          }\n        });\n\n    return success;\n  }\n\n  /// Run pub get to ensure that the project is in a runnable state.\n  /// This may result in pubspec.lock being updated and\n  /// as we don't allow the project to have any uncommited files\n  /// we need to commit it.\n  /// It will almost certainly change if we are doing a multi-package\n  /// release as the dependencies we are releasing will have their version\n  /// no.s changed.\n  void runPubGet(String projectRootPath) {\n    if (DartSdk().isPubGetRequired(projectRootPath)) {\n      /// Make certain the project is in a state that we can run it.\n      print(blue(\"Running 'pub get' to ensure package is ready to publish\"));\n      DartSdk().runPubGet(projectRootPath, progress: Progress.devNull());\n    }\n  }\n\n  bool gitChecks(String projectRootPath) {\n    final git = Git(projectRootPath);\n    final usingGit = git.usingGit;\n    if (usingGit) {\n      print('Found git project.');\n      // we do a premptive git pull as we won't be able to do a push\n      // at the end if we are behind head.\n      if (git.hasRemote) {\n        git.pull();\n      } else {\n        print(orange('Skipping git pull as no remote has been defined.'));\n      }\n\n      // print('Checking files are committed.');\n      // git.checkAllFilesCommited();\n    }\n\n    return usingGit;\n  }\n\n  void prepareReleaseNotes(\n      String projectRootPath, sm.Version newVersion, sm.Version? currentVersion,\n      {required bool usingGit,\n      required bool autoAnswer,\n      required bool dryrun}) {\n    /// the change log is backed up as part of the dry run\n    /// and restored afterwoods.\n    if (!doReleaseNotesExist(newVersion)) {\n      print('Generating release notes.');\n      generateReleaseNotes(newVersion, currentVersion,\n          autoAnswer: autoAnswer, dryrun: dryrun);\n      if (!dryrun && usingGit) {\n        // final git = Git(projectRootPath);\n        // print('Committing release notes and versioned files');\n        // git.commitVersion(\"Released $newVersion\");\n\n        // if (git.hasRemote) {\n        //   git.push();\n        // }\n      }\n    }\n    //}\n  }\n\n  /// checks the change log to see if the release notes for [version]\n  /// have already been generated.\n  bool doReleaseNotesExist(sm.Version version) {\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n    final note = '# $version';\n\n    return read(changeLogPath).toList().join('\\n').contains(note);\n  }\n\n  /// Ensure that all code is correctly formatted.\n  /// and that it passes all tests.\n  void prepareCode(String projectRootPath, int lineLength,\n      {required bool format, required bool usingGit}) {\n    // ensure that all code is correctly formatted.\n    if (format) {\n      _formatCode(projectRootPath, usingGit: usingGit, lineLength: lineLength);\n    }\n\n    final progress = start('dart analyze',\n        workingDirectory: projectRootPath,\n        nothrow: true,\n        progress: Progress.print());\n    if (progress.exitCode != 0) {\n      printerr(\n          red('dart analyze failed. Please fix the errors and try again.'));\n      io.exit(1);\n    }\n  }\n\n  sm.Version determineAndUpdateVersion(\n    VersionMethod versionMethod,\n    sm.Version? passedVersion,\n    PubSpecDetails pubspecDetails, {\n    required bool dryrun,\n  }) {\n    var newVersion = passedVersion ?? pubspecDetails.pubspec.version.semVersion;\n\n    if (versionMethod == VersionMethod.set) {\n      // we were passed the new version so just updated everything.\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    } else {\n      // Ask the user for the new version\n      newVersion = askForVersion(pubspecDetails.pubspec.version.semVersion);\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    }\n    return newVersion;\n  }\n\n  void _formatCode(String projectRootPath,\n      {required bool usingGit, required int lineLength}) {\n    // ensure that all code is correctly formatted.\n    print('Formatting code...');\n\n    _formatCodeInDirectory(\n        join(projectRootPath, 'bin'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'lib'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'test'), usingGit, lineLength, projectRootPath);\n  }\n\n  void _formatCodeInDirectory(\n      String srcPath, bool usingGit, int lineLength, String workingDirectory) {\n    final output = <String>[];\n\n    if (exists(srcPath) && !isEmpty(srcPath)) {\n      'dart format --summary none --line-length=$lineLength $srcPath'\n          .forEach(output.add, stderr: print);\n\n      if (usingGit) {\n        for (final line in output) {\n          if (line.startsWith('Formatted')) {\n            final filePath = line.substring('Formatted '.length);\n            'git add ${join(srcPath, filePath)}'\n                .start(workingDirectory: workingDirectory);\n          }\n        }\n      }\n    }\n  }\n\n  bool publish(String pubspecPath,\n      {required bool autoAnswer, required bool dryrun}) {\n    final projectRoot = dirname(pubspecPath);\n\n    final version = sm.Version.parse(io.Platform.version.split(' ')[0]);\n    var cmd = 'dart pub publish';\n    if (version.major == 2 && version.minor < 9) {\n      cmd = 'pub publish';\n    }\n\n    if (dryrun) {\n      cmd += ' --dry-run';\n    }\n    if (autoAnswer && !dryrun) {\n      cmd += ' --force';\n    }\n\n    // if (!waitForEx(cli.check(cmd, workingDirectory: projectRoot))) {\n    //   throw PubReleaseException('The publish attempt failed.');\n    // }\n\n    final progress = cmd.start(\n        terminal: true,\n        workingDirectory: projectRoot,\n        progress: Progress.print(),\n        nothrow: true);\n\n    return progress.exitCode == 0;\n  }\n\n  String get changeLogPath {\n    if (exists(changeLogPathUpper)) {\n      return changeLogPathUpper;\n    } else if (exists(changeLogPathLower)) {\n      return changeLogPathLower;\n    }\n    return changeLogPathUpper;\n  }\n\n  void generateReleaseNotes(sm.Version? newVersion, sm.Version? currentVersion,\n      {required bool autoAnswer, required bool dryrun}) {\n    // see https://blogs.sap.com/2018/06/22/generating-release-notes-from-git-commit-messages-using-basic-shell-commands-gitgrep/\n    // for better ideas.\n\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n\n    /// we use a .md as then user can preview the mark down.\n    final tmpReleaseNotes = join(pathToPackageRoot, 'release.notes.tmp.md');\n    // ignore: cascade_invocations\n    tmpReleaseNotes.write('# $newVersion');\n    final git = Git(pathToPackageRoot);\n    final usingGit = git.usingGit;\n\n    /// add commit messages to release notes.\n    if (usingGit) {\n      final lastTag = git.getLatestTag();\n\n      // just the messages from each commit\n      final messages = git.getCommitMessages(lastTag);\n\n      for (final message in messages) {\n        tmpReleaseNotes.append('- $message');\n      }\n      tmpReleaseNotes.append('');\n    }\n\n    /// append the changelog to the new release notes\n    read(changeLogPath).toList().forEach(tmpReleaseNotes.append);\n\n    // give the user a chance to clean up the change log.\n    if (!autoAnswer &&\n        !dryrun &&\n        confirm('Would you like to edit the $changeLogPath notes')) {\n      showEditor(tmpReleaseNotes);\n    }\n\n    // write the edited commit messages to the change log.\n    final backup = '$changeLogPath.bak';\n\n    /// move the change log out of the way.\n    move(changeLogPath, backup);\n\n    /// replace the newly updated change log over the old one.\n    move(tmpReleaseNotes, changeLogPath);\n\n    delete(backup);\n  }\n\n  /// checks with the user that we are operating on the correct package\n  /// and returns details of the packages pubspec.yaml.\n  ///\n  /// Also prints the version of the package we found.\n  ///\n  /// If [autoAnswer] is false we don't ask the user to confirm the package.\n  PubSpecDetails checkPackage({required bool autoAnswer}) {\n    final pubspecPath = findPubSpec(startingDir: pathToPackageRoot);\n    if (pubspecPath == null) {\n      print('Unable to find pubspec.yaml, run ${DartScript.self.exeName} '\n          'from the main '\n          \"package's root directory.\");\n      io.exit(1);\n    }\n\n    final pubspec = PubSpec.loadFromPath(pubspecPath);\n\n    pubspec.version.setSemVersion(pubspec.version.semVersion == sm.Version.none\n        ? sm.Version.parse('0.0.1')\n        : pubspec.version.semVersion);\n\n    print('');\n    print(green('Found ${pubspec.name.value} version ${pubspec.version}'));\n\n    print('');\n\n    return PubSpecDetails(pubspec, pubspecPath);\n  }\n\n  void commitRelease(\n    sm.Version newVersion,\n    String workingDirectory, {\n    required bool usingGit,\n    required bool autoAnswer,\n    required bool dryrun,\n  }) {\n    if (usingGit && !dryrun) {\n      final git = Git(workingDirectory);\n      print('Commiting all modified files.');\n      git\n        ..commitAll('Released $newVersion.')\n        ..pushReleaseTag(newVersion, autoAnswer: autoAnswer);\n    }\n  }\n\n  /// Runs the release process.\n  /// If we are running a dry run we back up key files that we have\n  /// to change for the pub.dev publish dry run to work but\n  /// which we don't actually want to changes as we are doing a dry run.\n  /// At the end of the dry run we restore these key files.\n  Future<void> doRun(\n      {required bool dryrun, required void Function() runRelease}) async {\n    if (dryrun) {\n      await withFileProtectionAsync([\n        join(pathToPackageRoot, 'pubspec.yaml'),\n        changeLogPath,\n        versionLibraryPath(pathToPackageRoot),\n      ], () async {\n        runRelease();\n      });\n    } else {\n      runRelease();\n    }\n  }\n\n  bool doRunTests(String projectRootPath,\n      {required String? tags, required String? excludeTags}) {\n    if (which('critical_test').notfound) {\n      print(blue('Installing dart package critical_test'));\n      'dart pub global activate critical_test'\n          .start(progress: Progress.printStdErr());\n    }\n    if (which('critical_test').notfound) {\n      printerr(\n          red('Please install the dart package critical_test and try again. '\n              '\"dart pub global activate critical_test\"'));\n      io.exit(1);\n    }\n    // critical_test generates a file to track failed tests\n    // add it to .gitignore so it doesn't look like an uncommitted\n    // file.\n    Git(projectRootPath).addGitIgnore('.failed_tracker');\n\n    var success = true;\n\n    if (!exists(join(projectRootPath, 'test'))) {\n      print(orange('No tests found in ${relative(projectRootPath)} skipping'));\n    } else {\n      final progress = startFromArgs(\n          exeName('critical_test'),\n          [\n            if (Settings().isVerbose) '-v',\n            if (tags != null) '--tags=$tags',\n            if (excludeTags != null) '--exclude-tags=$excludeTags',\n          ],\n          terminal: true,\n          workingDirectory: projectRootPath,\n          nothrow: true);\n\n      /// exitCode 5 means no test ran.\n      success = progress.exitCode == 0 || progress.exitCode == 5;\n      if (success) {\n        print(green('All unit tests passed.'));\n      }\n    }\n    return success;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:35.382983 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:35.382983
[ReorderMembersFix] 2025-10-19T11:24:35.619058 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/release_runner.dart:
[ReorderMembersFix] 2025-10-19T11:24:35.619058 ConflictingEditException: {"offset":14514,"length":466,"replacement":"  PubSpec pubspec;\n\n  String path;\n\n  PubSpecDetails(this.pubspec, this.path);\n\n  /// Removes all of the dependency_overrides for each of the packages\n  /// listed in the pubrelease_multi.yaml file.\n  void removeOverrides() {\n    pubspec\n      ..dependencyOverrides.removeAll()\n      ..saveTo(path);\n\n    /// pause for a moment incase an IDE is monitoring the pubspec.yaml\n    /// changes. If we move too soon the .dart_tools directory may not exist.\n    sleep(2);\n  }"} conflicts with {"offset":14514,"length":466,"replacement":"  PubSpec pubspec;\n\n  String path;\n\n  PubSpecDetails(this.pubspec, this.path);\n\n  /// Removes all of the dependency_overrides for each of the packages\n  /// listed in the pubrelease_multi.yaml file.\n  void removeOverrides() {\n    pubspec\n      ..dependencyOverrides.removeAll()\n      ..saveTo(path);\n\n    /// pause for a moment incase an IDE is monitoring the pubspec.yaml\n    /// changes. If we move too soon the .dart_tools directory may not exist.\n    sleep(2);\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:35.619058 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:35.619058
[ReorderMembersFix] 2025-10-19T11:24:35.620246 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/release_runner.dart:
[ReorderMembersFix] 2025-10-19T11:24:35.620246 ConflictingEditException: {"offset":654,"length":13614,"replacement":"  String pathToPackageRoot;\n\n  /// git books writes out changelog.md as lower case. We also have the issue\n  /// that on Windows file names are case insensitive.\n  /// As such we look for both versions given the upper case version precedence.\n  late final changeLogPathUpper = join(pathToPackageRoot, 'CHANGELOG.md');\n\n  late final changeLogPathLower = join(pathToPackageRoot, 'changelog.md');\n\n  ReleaseRunner(this.pathToPackageRoot);\n\n  Future<bool> pubRelease({\n    required PubSpecDetails pubSpecDetails,\n    required VersionMethod versionMethod,\n    required int lineLength,\n    required bool format,\n    required bool dryrun,\n    required bool runTests,\n    required bool autoAnswer,\n    required String? tags,\n    required String? excludeTags,\n    required bool useGit,\n    sm.Version? setVersion,\n  }) async {\n    var success = false;\n    await doRun(\n        dryrun: dryrun,\n        runRelease: () async {\n          final projectRootPath = dirname(pubSpecDetails.path);\n\n          final newVersion = determineAndUpdateVersion(\n              versionMethod, setVersion, pubSpecDetails,\n              dryrun: dryrun);\n\n          runPubGet(projectRootPath);\n\n          if (runTests) {\n            if (!doRunTests(projectRootPath,\n                tags: tags, excludeTags: excludeTags)) {\n              throw UnitTestFailedException(\n                  'Some unit tests failed. Release has been halted.');\n            }\n          }\n\n          final usingGit = useGit && gitChecks(projectRootPath);\n\n          runPreReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n          prepareReleaseNotes(projectRootPath, newVersion,\n              pubSpecDetails.pubspec.version.semVersion,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n          prepareCode(projectRootPath, lineLength,\n              format: format, usingGit: usingGit);\n\n          commitRelease(newVersion, projectRootPath,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n\n          // protect the pubspec.yaml as need to remove the\n          // overrides\n          await withFileProtectionAsync([pubSpecDetails.path], () async {\n            pubSpecDetails.removeOverrides();\n            success = publish(pubSpecDetails.path,\n                autoAnswer: autoAnswer, dryrun: dryrun);\n          });\n\n          runPostReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n\n          if (!success) {\n            printerr(red('The publish attempt failed.'));\n          }\n        });\n\n    return success;\n  }\n\n  /// Run pub get to ensure that the project is in a runnable state.\n  /// This may result in pubspec.lock being updated and\n  /// as we don't allow the project to have any uncommited files\n  /// we need to commit it.\n  /// It will almost certainly change if we are doing a multi-package\n  /// release as the dependencies we are releasing will have their version\n  /// no.s changed.\n  void runPubGet(String projectRootPath) {\n    if (DartSdk().isPubGetRequired(projectRootPath)) {\n      /// Make certain the project is in a state that we can run it.\n      print(blue(\"Running 'pub get' to ensure package is ready to publish\"));\n      DartSdk().runPubGet(projectRootPath, progress: Progress.devNull());\n    }\n  }\n\n  bool gitChecks(String projectRootPath) {\n    final git = Git(projectRootPath);\n    final usingGit = git.usingGit;\n    if (usingGit) {\n      print('Found git project.');\n      // we do a premptive git pull as we won't be able to do a push\n      // at the end if we are behind head.\n      if (git.hasRemote) {\n        git.pull();\n      } else {\n        print(orange('Skipping git pull as no remote has been defined.'));\n      }\n\n      // print('Checking files are committed.');\n      // git.checkAllFilesCommited();\n    }\n\n    return usingGit;\n  }\n\n  void prepareReleaseNotes(\n      String projectRootPath, sm.Version newVersion, sm.Version? currentVersion,\n      {required bool usingGit,\n      required bool autoAnswer,\n      required bool dryrun}) {\n    /// the change log is backed up as part of the dry run\n    /// and restored afterwoods.\n    if (!doReleaseNotesExist(newVersion)) {\n      print('Generating release notes.');\n      generateReleaseNotes(newVersion, currentVersion,\n          autoAnswer: autoAnswer, dryrun: dryrun);\n      if (!dryrun && usingGit) {\n        // final git = Git(projectRootPath);\n        // print('Committing release notes and versioned files');\n        // git.commitVersion(\"Released $newVersion\");\n\n        // if (git.hasRemote) {\n        //   git.push();\n        // }\n      }\n    }\n    //}\n  }\n\n  /// checks the change log to see if the release notes for [version]\n  /// have already been generated.\n  bool doReleaseNotesExist(sm.Version version) {\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n    final note = '# $version';\n\n    return read(changeLogPath).toList().join('\\n').contains(note);\n  }\n\n  /// Ensure that all code is correctly formatted.\n  /// and that it passes all tests.\n  void prepareCode(String projectRootPath, int lineLength,\n      {required bool format, required bool usingGit}) {\n    // ensure that all code is correctly formatted.\n    if (format) {\n      _formatCode(projectRootPath, usingGit: usingGit, lineLength: lineLength);\n    }\n\n    final progress = start('dart analyze',\n        workingDirectory: projectRootPath,\n        nothrow: true,\n        progress: Progress.print());\n    if (progress.exitCode != 0) {\n      printerr(\n          red('dart analyze failed. Please fix the errors and try again.'));\n      io.exit(1);\n    }\n  }\n\n  sm.Version determineAndUpdateVersion(\n    VersionMethod versionMethod,\n    sm.Version? passedVersion,\n    PubSpecDetails pubspecDetails, {\n    required bool dryrun,\n  }) {\n    var newVersion = passedVersion ?? pubspecDetails.pubspec.version.semVersion;\n\n    if (versionMethod == VersionMethod.set) {\n      // we were passed the new version so just updated everything.\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    } else {\n      // Ask the user for the new version\n      newVersion = askForVersion(pubspecDetails.pubspec.version.semVersion);\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    }\n    return newVersion;\n  }\n\n  void _formatCode(String projectRootPath,\n      {required bool usingGit, required int lineLength}) {\n    // ensure that all code is correctly formatted.\n    print('Formatting code...');\n\n    _formatCodeInDirectory(\n        join(projectRootPath, 'bin'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'lib'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'test'), usingGit, lineLength, projectRootPath);\n  }\n\n  void _formatCodeInDirectory(\n      String srcPath, bool usingGit, int lineLength, String workingDirectory) {\n    final output = <String>[];\n\n    if (exists(srcPath) && !isEmpty(srcPath)) {\n      'dart format --summary none --line-length=$lineLength $srcPath'\n          .forEach(output.add, stderr: print);\n\n      if (usingGit) {\n        for (final line in output) {\n          if (line.startsWith('Formatted')) {\n            final filePath = line.substring('Formatted '.length);\n            'git add ${join(srcPath, filePath)}'\n                .start(workingDirectory: workingDirectory);\n          }\n        }\n      }\n    }\n  }\n\n  bool publish(String pubspecPath,\n      {required bool autoAnswer, required bool dryrun}) {\n    final projectRoot = dirname(pubspecPath);\n\n    final version = sm.Version.parse(io.Platform.version.split(' ')[0]);\n    var cmd = 'dart pub publish';\n    if (version.major == 2 && version.minor < 9) {\n      cmd = 'pub publish';\n    }\n\n    if (dryrun) {\n      cmd += ' --dry-run';\n    }\n    if (autoAnswer && !dryrun) {\n      cmd += ' --force';\n    }\n\n    // if (!waitForEx(cli.check(cmd, workingDirectory: projectRoot))) {\n    //   throw PubReleaseException('The publish attempt failed.');\n    // }\n\n    final progress = cmd.start(\n        terminal: true,\n        workingDirectory: projectRoot,\n        progress: Progress.print(),\n        nothrow: true);\n\n    return progress.exitCode == 0;\n  }\n\n  String get changeLogPath {\n    if (exists(changeLogPathUpper)) {\n      return changeLogPathUpper;\n    } else if (exists(changeLogPathLower)) {\n      return changeLogPathLower;\n    }\n    return changeLogPathUpper;\n  }\n\n  void generateReleaseNotes(sm.Version? newVersion, sm.Version? currentVersion,\n      {required bool autoAnswer, required bool dryrun}) {\n    // see https://blogs.sap.com/2018/06/22/generating-release-notes-from-git-commit-messages-using-basic-shell-commands-gitgrep/\n    // for better ideas.\n\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n\n    /// we use a .md as then user can preview the mark down.\n    final tmpReleaseNotes = join(pathToPackageRoot, 'release.notes.tmp.md');\n    // ignore: cascade_invocations\n    tmpReleaseNotes.write('# $newVersion');\n    final git = Git(pathToPackageRoot);\n    final usingGit = git.usingGit;\n\n    /// add commit messages to release notes.\n    if (usingGit) {\n      final lastTag = git.getLatestTag();\n\n      // just the messages from each commit\n      final messages = git.getCommitMessages(lastTag);\n\n      for (final message in messages) {\n        tmpReleaseNotes.append('- $message');\n      }\n      tmpReleaseNotes.append('');\n    }\n\n    /// append the changelog to the new release notes\n    read(changeLogPath).toList().forEach(tmpReleaseNotes.append);\n\n    // give the user a chance to clean up the change log.\n    if (!autoAnswer &&\n        !dryrun &&\n        confirm('Would you like to edit the $changeLogPath notes')) {\n      showEditor(tmpReleaseNotes);\n    }\n\n    // write the edited commit messages to the change log.\n    final backup = '$changeLogPath.bak';\n\n    /// move the change log out of the way.\n    move(changeLogPath, backup);\n\n    /// replace the newly updated change log over the old one.\n    move(tmpReleaseNotes, changeLogPath);\n\n    delete(backup);\n  }\n\n  /// checks with the user that we are operating on the correct package\n  /// and returns details of the packages pubspec.yaml.\n  ///\n  /// Also prints the version of the package we found.\n  ///\n  /// If [autoAnswer] is false we don't ask the user to confirm the package.\n  PubSpecDetails checkPackage({required bool autoAnswer}) {\n    final pubspecPath = findPubSpec(startingDir: pathToPackageRoot);\n    if (pubspecPath == null) {\n      print('Unable to find pubspec.yaml, run ${DartScript.self.exeName} '\n          'from the main '\n          \"package's root directory.\");\n      io.exit(1);\n    }\n\n    final pubspec = PubSpec.loadFromPath(pubspecPath);\n\n    pubspec.version.setSemVersion(pubspec.version.semVersion == sm.Version.none\n        ? sm.Version.parse('0.0.1')\n        : pubspec.version.semVersion);\n\n    print('');\n    print(green('Found ${pubspec.name.value} version ${pubspec.version}'));\n\n    print('');\n\n    return PubSpecDetails(pubspec, pubspecPath);\n  }\n\n  void commitRelease(\n    sm.Version newVersion,\n    String workingDirectory, {\n    required bool usingGit,\n    required bool autoAnswer,\n    required bool dryrun,\n  }) {\n    if (usingGit && !dryrun) {\n      final git = Git(workingDirectory);\n      print('Commiting all modified files.');\n      git\n        ..commitAll('Released $newVersion.')\n        ..pushReleaseTag(newVersion, autoAnswer: autoAnswer);\n    }\n  }\n\n  /// Runs the release process.\n  /// If we are running a dry run we back up key files that we have\n  /// to change for the pub.dev publish dry run to work but\n  /// which we don't actually want to changes as we are doing a dry run.\n  /// At the end of the dry run we restore these key files.\n  Future<void> doRun(\n      {required bool dryrun, required void Function() runRelease}) async {\n    if (dryrun) {\n      await withFileProtectionAsync([\n        join(pathToPackageRoot, 'pubspec.yaml'),\n        changeLogPath,\n        versionLibraryPath(pathToPackageRoot),\n      ], () async {\n        runRelease();\n      });\n    } else {\n      runRelease();\n    }\n  }\n\n  bool doRunTests(String projectRootPath,\n      {required String? tags, required String? excludeTags}) {\n    if (which('critical_test').notfound) {\n      print(blue('Installing dart package critical_test'));\n      'dart pub global activate critical_test'\n          .start(progress: Progress.printStdErr());\n    }\n    if (which('critical_test').notfound) {\n      printerr(\n          red('Please install the dart package critical_test and try again. '\n              '\"dart pub global activate critical_test\"'));\n      io.exit(1);\n    }\n    // critical_test generates a file to track failed tests\n    // add it to .gitignore so it doesn't look like an uncommitted\n    // file.\n    Git(projectRootPath).addGitIgnore('.failed_tracker');\n\n    var success = true;\n\n    if (!exists(join(projectRootPath, 'test'))) {\n      print(orange('No tests found in ${relative(projectRootPath)} skipping'));\n    } else {\n      final progress = startFromArgs(\n          exeName('critical_test'),\n          [\n            if (Settings().isVerbose) '-v',\n            if (tags != null) '--tags=$tags',\n            if (excludeTags != null) '--exclude-tags=$excludeTags',\n          ],\n          terminal: true,\n          workingDirectory: projectRootPath,\n          nothrow: true);\n\n      /// exitCode 5 means no test ran.\n      success = progress.exitCode == 0 || progress.exitCode == 5;\n      if (success) {\n        print(green('All unit tests passed.'));\n      }\n    }\n    return success;\n  }"} conflicts with {"offset":654,"length":13614,"replacement":"  String pathToPackageRoot;\n\n  /// git books writes out changelog.md as lower case. We also have the issue\n  /// that on Windows file names are case insensitive.\n  /// As such we look for both versions given the upper case version precedence.\n  late final changeLogPathUpper = join(pathToPackageRoot, 'CHANGELOG.md');\n\n  late final changeLogPathLower = join(pathToPackageRoot, 'changelog.md');\n\n  ReleaseRunner(this.pathToPackageRoot);\n\n  Future<bool> pubRelease({\n    required PubSpecDetails pubSpecDetails,\n    required VersionMethod versionMethod,\n    required int lineLength,\n    required bool format,\n    required bool dryrun,\n    required bool runTests,\n    required bool autoAnswer,\n    required String? tags,\n    required String? excludeTags,\n    required bool useGit,\n    sm.Version? setVersion,\n  }) async {\n    var success = false;\n    await doRun(\n        dryrun: dryrun,\n        runRelease: () async {\n          final projectRootPath = dirname(pubSpecDetails.path);\n\n          final newVersion = determineAndUpdateVersion(\n              versionMethod, setVersion, pubSpecDetails,\n              dryrun: dryrun);\n\n          runPubGet(projectRootPath);\n\n          if (runTests) {\n            if (!doRunTests(projectRootPath,\n                tags: tags, excludeTags: excludeTags)) {\n              throw UnitTestFailedException(\n                  'Some unit tests failed. Release has been halted.');\n            }\n          }\n\n          final usingGit = useGit && gitChecks(projectRootPath);\n\n          runPreReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n          prepareReleaseNotes(projectRootPath, newVersion,\n              pubSpecDetails.pubspec.version.semVersion,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n          prepareCode(projectRootPath, lineLength,\n              format: format, usingGit: usingGit);\n\n          commitRelease(newVersion, projectRootPath,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n\n          // protect the pubspec.yaml as need to remove the\n          // overrides\n          await withFileProtectionAsync([pubSpecDetails.path], () async {\n            pubSpecDetails.removeOverrides();\n            success = publish(pubSpecDetails.path,\n                autoAnswer: autoAnswer, dryrun: dryrun);\n          });\n\n          runPostReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n\n          if (!success) {\n            printerr(red('The publish attempt failed.'));\n          }\n        });\n\n    return success;\n  }\n\n  /// Run pub get to ensure that the project is in a runnable state.\n  /// This may result in pubspec.lock being updated and\n  /// as we don't allow the project to have any uncommited files\n  /// we need to commit it.\n  /// It will almost certainly change if we are doing a multi-package\n  /// release as the dependencies we are releasing will have their version\n  /// no.s changed.\n  void runPubGet(String projectRootPath) {\n    if (DartSdk().isPubGetRequired(projectRootPath)) {\n      /// Make certain the project is in a state that we can run it.\n      print(blue(\"Running 'pub get' to ensure package is ready to publish\"));\n      DartSdk().runPubGet(projectRootPath, progress: Progress.devNull());\n    }\n  }\n\n  bool gitChecks(String projectRootPath) {\n    final git = Git(projectRootPath);\n    final usingGit = git.usingGit;\n    if (usingGit) {\n      print('Found git project.');\n      // we do a premptive git pull as we won't be able to do a push\n      // at the end if we are behind head.\n      if (git.hasRemote) {\n        git.pull();\n      } else {\n        print(orange('Skipping git pull as no remote has been defined.'));\n      }\n\n      // print('Checking files are committed.');\n      // git.checkAllFilesCommited();\n    }\n\n    return usingGit;\n  }\n\n  void prepareReleaseNotes(\n      String projectRootPath, sm.Version newVersion, sm.Version? currentVersion,\n      {required bool usingGit,\n      required bool autoAnswer,\n      required bool dryrun}) {\n    /// the change log is backed up as part of the dry run\n    /// and restored afterwoods.\n    if (!doReleaseNotesExist(newVersion)) {\n      print('Generating release notes.');\n      generateReleaseNotes(newVersion, currentVersion,\n          autoAnswer: autoAnswer, dryrun: dryrun);\n      if (!dryrun && usingGit) {\n        // final git = Git(projectRootPath);\n        // print('Committing release notes and versioned files');\n        // git.commitVersion(\"Released $newVersion\");\n\n        // if (git.hasRemote) {\n        //   git.push();\n        // }\n      }\n    }\n    //}\n  }\n\n  /// checks the change log to see if the release notes for [version]\n  /// have already been generated.\n  bool doReleaseNotesExist(sm.Version version) {\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n    final note = '# $version';\n\n    return read(changeLogPath).toList().join('\\n').contains(note);\n  }\n\n  /// Ensure that all code is correctly formatted.\n  /// and that it passes all tests.\n  void prepareCode(String projectRootPath, int lineLength,\n      {required bool format, required bool usingGit}) {\n    // ensure that all code is correctly formatted.\n    if (format) {\n      _formatCode(projectRootPath, usingGit: usingGit, lineLength: lineLength);\n    }\n\n    final progress = start('dart analyze',\n        workingDirectory: projectRootPath,\n        nothrow: true,\n        progress: Progress.print());\n    if (progress.exitCode != 0) {\n      printerr(\n          red('dart analyze failed. Please fix the errors and try again.'));\n      io.exit(1);\n    }\n  }\n\n  sm.Version determineAndUpdateVersion(\n    VersionMethod versionMethod,\n    sm.Version? passedVersion,\n    PubSpecDetails pubspecDetails, {\n    required bool dryrun,\n  }) {\n    var newVersion = passedVersion ?? pubspecDetails.pubspec.version.semVersion;\n\n    if (versionMethod == VersionMethod.set) {\n      // we were passed the new version so just updated everything.\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    } else {\n      // Ask the user for the new version\n      newVersion = askForVersion(pubspecDetails.pubspec.version.semVersion);\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    }\n    return newVersion;\n  }\n\n  void _formatCode(String projectRootPath,\n      {required bool usingGit, required int lineLength}) {\n    // ensure that all code is correctly formatted.\n    print('Formatting code...');\n\n    _formatCodeInDirectory(\n        join(projectRootPath, 'bin'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'lib'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'test'), usingGit, lineLength, projectRootPath);\n  }\n\n  void _formatCodeInDirectory(\n      String srcPath, bool usingGit, int lineLength, String workingDirectory) {\n    final output = <String>[];\n\n    if (exists(srcPath) && !isEmpty(srcPath)) {\n      'dart format --summary none --line-length=$lineLength $srcPath'\n          .forEach(output.add, stderr: print);\n\n      if (usingGit) {\n        for (final line in output) {\n          if (line.startsWith('Formatted')) {\n            final filePath = line.substring('Formatted '.length);\n            'git add ${join(srcPath, filePath)}'\n                .start(workingDirectory: workingDirectory);\n          }\n        }\n      }\n    }\n  }\n\n  bool publish(String pubspecPath,\n      {required bool autoAnswer, required bool dryrun}) {\n    final projectRoot = dirname(pubspecPath);\n\n    final version = sm.Version.parse(io.Platform.version.split(' ')[0]);\n    var cmd = 'dart pub publish';\n    if (version.major == 2 && version.minor < 9) {\n      cmd = 'pub publish';\n    }\n\n    if (dryrun) {\n      cmd += ' --dry-run';\n    }\n    if (autoAnswer && !dryrun) {\n      cmd += ' --force';\n    }\n\n    // if (!waitForEx(cli.check(cmd, workingDirectory: projectRoot))) {\n    //   throw PubReleaseException('The publish attempt failed.');\n    // }\n\n    final progress = cmd.start(\n        terminal: true,\n        workingDirectory: projectRoot,\n        progress: Progress.print(),\n        nothrow: true);\n\n    return progress.exitCode == 0;\n  }\n\n  String get changeLogPath {\n    if (exists(changeLogPathUpper)) {\n      return changeLogPathUpper;\n    } else if (exists(changeLogPathLower)) {\n      return changeLogPathLower;\n    }\n    return changeLogPathUpper;\n  }\n\n  void generateReleaseNotes(sm.Version? newVersion, sm.Version? currentVersion,\n      {required bool autoAnswer, required bool dryrun}) {\n    // see https://blogs.sap.com/2018/06/22/generating-release-notes-from-git-commit-messages-using-basic-shell-commands-gitgrep/\n    // for better ideas.\n\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n\n    /// we use a .md as then user can preview the mark down.\n    final tmpReleaseNotes = join(pathToPackageRoot, 'release.notes.tmp.md');\n    // ignore: cascade_invocations\n    tmpReleaseNotes.write('# $newVersion');\n    final git = Git(pathToPackageRoot);\n    final usingGit = git.usingGit;\n\n    /// add commit messages to release notes.\n    if (usingGit) {\n      final lastTag = git.getLatestTag();\n\n      // just the messages from each commit\n      final messages = git.getCommitMessages(lastTag);\n\n      for (final message in messages) {\n        tmpReleaseNotes.append('- $message');\n      }\n      tmpReleaseNotes.append('');\n    }\n\n    /// append the changelog to the new release notes\n    read(changeLogPath).toList().forEach(tmpReleaseNotes.append);\n\n    // give the user a chance to clean up the change log.\n    if (!autoAnswer &&\n        !dryrun &&\n        confirm('Would you like to edit the $changeLogPath notes')) {\n      showEditor(tmpReleaseNotes);\n    }\n\n    // write the edited commit messages to the change log.\n    final backup = '$changeLogPath.bak';\n\n    /// move the change log out of the way.\n    move(changeLogPath, backup);\n\n    /// replace the newly updated change log over the old one.\n    move(tmpReleaseNotes, changeLogPath);\n\n    delete(backup);\n  }\n\n  /// checks with the user that we are operating on the correct package\n  /// and returns details of the packages pubspec.yaml.\n  ///\n  /// Also prints the version of the package we found.\n  ///\n  /// If [autoAnswer] is false we don't ask the user to confirm the package.\n  PubSpecDetails checkPackage({required bool autoAnswer}) {\n    final pubspecPath = findPubSpec(startingDir: pathToPackageRoot);\n    if (pubspecPath == null) {\n      print('Unable to find pubspec.yaml, run ${DartScript.self.exeName} '\n          'from the main '\n          \"package's root directory.\");\n      io.exit(1);\n    }\n\n    final pubspec = PubSpec.loadFromPath(pubspecPath);\n\n    pubspec.version.setSemVersion(pubspec.version.semVersion == sm.Version.none\n        ? sm.Version.parse('0.0.1')\n        : pubspec.version.semVersion);\n\n    print('');\n    print(green('Found ${pubspec.name.value} version ${pubspec.version}'));\n\n    print('');\n\n    return PubSpecDetails(pubspec, pubspecPath);\n  }\n\n  void commitRelease(\n    sm.Version newVersion,\n    String workingDirectory, {\n    required bool usingGit,\n    required bool autoAnswer,\n    required bool dryrun,\n  }) {\n    if (usingGit && !dryrun) {\n      final git = Git(workingDirectory);\n      print('Commiting all modified files.');\n      git\n        ..commitAll('Released $newVersion.')\n        ..pushReleaseTag(newVersion, autoAnswer: autoAnswer);\n    }\n  }\n\n  /// Runs the release process.\n  /// If we are running a dry run we back up key files that we have\n  /// to change for the pub.dev publish dry run to work but\n  /// which we don't actually want to changes as we are doing a dry run.\n  /// At the end of the dry run we restore these key files.\n  Future<void> doRun(\n      {required bool dryrun, required void Function() runRelease}) async {\n    if (dryrun) {\n      await withFileProtectionAsync([\n        join(pathToPackageRoot, 'pubspec.yaml'),\n        changeLogPath,\n        versionLibraryPath(pathToPackageRoot),\n      ], () async {\n        runRelease();\n      });\n    } else {\n      runRelease();\n    }\n  }\n\n  bool doRunTests(String projectRootPath,\n      {required String? tags, required String? excludeTags}) {\n    if (which('critical_test').notfound) {\n      print(blue('Installing dart package critical_test'));\n      'dart pub global activate critical_test'\n          .start(progress: Progress.printStdErr());\n    }\n    if (which('critical_test').notfound) {\n      printerr(\n          red('Please install the dart package critical_test and try again. '\n              '\"dart pub global activate critical_test\"'));\n      io.exit(1);\n    }\n    // critical_test generates a file to track failed tests\n    // add it to .gitignore so it doesn't look like an uncommitted\n    // file.\n    Git(projectRootPath).addGitIgnore('.failed_tracker');\n\n    var success = true;\n\n    if (!exists(join(projectRootPath, 'test'))) {\n      print(orange('No tests found in ${relative(projectRootPath)} skipping'));\n    } else {\n      final progress = startFromArgs(\n          exeName('critical_test'),\n          [\n            if (Settings().isVerbose) '-v',\n            if (tags != null) '--tags=$tags',\n            if (excludeTags != null) '--exclude-tags=$excludeTags',\n          ],\n          terminal: true,\n          workingDirectory: projectRootPath,\n          nothrow: true);\n\n      /// exitCode 5 means no test ran.\n      success = progress.exitCode == 0 || progress.exitCode == 5;\n      if (success) {\n        print(green('All unit tests passed.'));\n      }\n    }\n    return success;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:35.620246 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:35.620246
[ReorderMembersFix] 2025-10-19T11:24:36.493145 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/release_runner.dart:
[ReorderMembersFix] 2025-10-19T11:24:36.493145 ConflictingEditException: {"offset":14514,"length":466,"replacement":"  PubSpec pubspec;\n\n  String path;\n\n  PubSpecDetails(this.pubspec, this.path);\n\n  /// Removes all of the dependency_overrides for each of the packages\n  /// listed in the pubrelease_multi.yaml file.\n  void removeOverrides() {\n    pubspec\n      ..dependencyOverrides.removeAll()\n      ..saveTo(path);\n\n    /// pause for a moment incase an IDE is monitoring the pubspec.yaml\n    /// changes. If we move too soon the .dart_tools directory may not exist.\n    sleep(2);\n  }"} conflicts with {"offset":14514,"length":466,"replacement":"  PubSpec pubspec;\n\n  String path;\n\n  PubSpecDetails(this.pubspec, this.path);\n\n  /// Removes all of the dependency_overrides for each of the packages\n  /// listed in the pubrelease_multi.yaml file.\n  void removeOverrides() {\n    pubspec\n      ..dependencyOverrides.removeAll()\n      ..saveTo(path);\n\n    /// pause for a moment incase an IDE is monitoring the pubspec.yaml\n    /// changes. If we move too soon the .dart_tools directory may not exist.\n    sleep(2);\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:36.493145 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:36.493145
[ReorderMembersFix] 2025-10-19T11:24:36.494082 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/release_runner.dart:
[ReorderMembersFix] 2025-10-19T11:24:36.494082 ConflictingEditException: {"offset":654,"length":13614,"replacement":"  String pathToPackageRoot;\n\n  /// git books writes out changelog.md as lower case. We also have the issue\n  /// that on Windows file names are case insensitive.\n  /// As such we look for both versions given the upper case version precedence.\n  late final changeLogPathUpper = join(pathToPackageRoot, 'CHANGELOG.md');\n\n  late final changeLogPathLower = join(pathToPackageRoot, 'changelog.md');\n\n  ReleaseRunner(this.pathToPackageRoot);\n\n  Future<bool> pubRelease({\n    required PubSpecDetails pubSpecDetails,\n    required VersionMethod versionMethod,\n    required int lineLength,\n    required bool format,\n    required bool dryrun,\n    required bool runTests,\n    required bool autoAnswer,\n    required String? tags,\n    required String? excludeTags,\n    required bool useGit,\n    sm.Version? setVersion,\n  }) async {\n    var success = false;\n    await doRun(\n        dryrun: dryrun,\n        runRelease: () async {\n          final projectRootPath = dirname(pubSpecDetails.path);\n\n          final newVersion = determineAndUpdateVersion(\n              versionMethod, setVersion, pubSpecDetails,\n              dryrun: dryrun);\n\n          runPubGet(projectRootPath);\n\n          if (runTests) {\n            if (!doRunTests(projectRootPath,\n                tags: tags, excludeTags: excludeTags)) {\n              throw UnitTestFailedException(\n                  'Some unit tests failed. Release has been halted.');\n            }\n          }\n\n          final usingGit = useGit && gitChecks(projectRootPath);\n\n          runPreReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n          prepareReleaseNotes(projectRootPath, newVersion,\n              pubSpecDetails.pubspec.version.semVersion,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n          prepareCode(projectRootPath, lineLength,\n              format: format, usingGit: usingGit);\n\n          commitRelease(newVersion, projectRootPath,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n\n          // protect the pubspec.yaml as need to remove the\n          // overrides\n          await withFileProtectionAsync([pubSpecDetails.path], () async {\n            pubSpecDetails.removeOverrides();\n            success = publish(pubSpecDetails.path,\n                autoAnswer: autoAnswer, dryrun: dryrun);\n          });\n\n          runPostReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n\n          if (!success) {\n            printerr(red('The publish attempt failed.'));\n          }\n        });\n\n    return success;\n  }\n\n  /// Run pub get to ensure that the project is in a runnable state.\n  /// This may result in pubspec.lock being updated and\n  /// as we don't allow the project to have any uncommited files\n  /// we need to commit it.\n  /// It will almost certainly change if we are doing a multi-package\n  /// release as the dependencies we are releasing will have their version\n  /// no.s changed.\n  void runPubGet(String projectRootPath) {\n    if (DartSdk().isPubGetRequired(projectRootPath)) {\n      /// Make certain the project is in a state that we can run it.\n      print(blue(\"Running 'pub get' to ensure package is ready to publish\"));\n      DartSdk().runPubGet(projectRootPath, progress: Progress.devNull());\n    }\n  }\n\n  bool gitChecks(String projectRootPath) {\n    final git = Git(projectRootPath);\n    final usingGit = git.usingGit;\n    if (usingGit) {\n      print('Found git project.');\n      // we do a premptive git pull as we won't be able to do a push\n      // at the end if we are behind head.\n      if (git.hasRemote) {\n        git.pull();\n      } else {\n        print(orange('Skipping git pull as no remote has been defined.'));\n      }\n\n      // print('Checking files are committed.');\n      // git.checkAllFilesCommited();\n    }\n\n    return usingGit;\n  }\n\n  void prepareReleaseNotes(\n      String projectRootPath, sm.Version newVersion, sm.Version? currentVersion,\n      {required bool usingGit,\n      required bool autoAnswer,\n      required bool dryrun}) {\n    /// the change log is backed up as part of the dry run\n    /// and restored afterwoods.\n    if (!doReleaseNotesExist(newVersion)) {\n      print('Generating release notes.');\n      generateReleaseNotes(newVersion, currentVersion,\n          autoAnswer: autoAnswer, dryrun: dryrun);\n      if (!dryrun && usingGit) {\n        // final git = Git(projectRootPath);\n        // print('Committing release notes and versioned files');\n        // git.commitVersion(\"Released $newVersion\");\n\n        // if (git.hasRemote) {\n        //   git.push();\n        // }\n      }\n    }\n    //}\n  }\n\n  /// checks the change log to see if the release notes for [version]\n  /// have already been generated.\n  bool doReleaseNotesExist(sm.Version version) {\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n    final note = '# $version';\n\n    return read(changeLogPath).toList().join('\\n').contains(note);\n  }\n\n  /// Ensure that all code is correctly formatted.\n  /// and that it passes all tests.\n  void prepareCode(String projectRootPath, int lineLength,\n      {required bool format, required bool usingGit}) {\n    // ensure that all code is correctly formatted.\n    if (format) {\n      _formatCode(projectRootPath, usingGit: usingGit, lineLength: lineLength);\n    }\n\n    final progress = start('dart analyze',\n        workingDirectory: projectRootPath,\n        nothrow: true,\n        progress: Progress.print());\n    if (progress.exitCode != 0) {\n      printerr(\n          red('dart analyze failed. Please fix the errors and try again.'));\n      io.exit(1);\n    }\n  }\n\n  sm.Version determineAndUpdateVersion(\n    VersionMethod versionMethod,\n    sm.Version? passedVersion,\n    PubSpecDetails pubspecDetails, {\n    required bool dryrun,\n  }) {\n    var newVersion = passedVersion ?? pubspecDetails.pubspec.version.semVersion;\n\n    if (versionMethod == VersionMethod.set) {\n      // we were passed the new version so just updated everything.\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    } else {\n      // Ask the user for the new version\n      newVersion = askForVersion(pubspecDetails.pubspec.version.semVersion);\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    }\n    return newVersion;\n  }\n\n  void _formatCode(String projectRootPath,\n      {required bool usingGit, required int lineLength}) {\n    // ensure that all code is correctly formatted.\n    print('Formatting code...');\n\n    _formatCodeInDirectory(\n        join(projectRootPath, 'bin'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'lib'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'test'), usingGit, lineLength, projectRootPath);\n  }\n\n  void _formatCodeInDirectory(\n      String srcPath, bool usingGit, int lineLength, String workingDirectory) {\n    final output = <String>[];\n\n    if (exists(srcPath) && !isEmpty(srcPath)) {\n      'dart format --summary none --line-length=$lineLength $srcPath'\n          .forEach(output.add, stderr: print);\n\n      if (usingGit) {\n        for (final line in output) {\n          if (line.startsWith('Formatted')) {\n            final filePath = line.substring('Formatted '.length);\n            'git add ${join(srcPath, filePath)}'\n                .start(workingDirectory: workingDirectory);\n          }\n        }\n      }\n    }\n  }\n\n  bool publish(String pubspecPath,\n      {required bool autoAnswer, required bool dryrun}) {\n    final projectRoot = dirname(pubspecPath);\n\n    final version = sm.Version.parse(io.Platform.version.split(' ')[0]);\n    var cmd = 'dart pub publish';\n    if (version.major == 2 && version.minor < 9) {\n      cmd = 'pub publish';\n    }\n\n    if (dryrun) {\n      cmd += ' --dry-run';\n    }\n    if (autoAnswer && !dryrun) {\n      cmd += ' --force';\n    }\n\n    // if (!waitForEx(cli.check(cmd, workingDirectory: projectRoot))) {\n    //   throw PubReleaseException('The publish attempt failed.');\n    // }\n\n    final progress = cmd.start(\n        terminal: true,\n        workingDirectory: projectRoot,\n        progress: Progress.print(),\n        nothrow: true);\n\n    return progress.exitCode == 0;\n  }\n\n  String get changeLogPath {\n    if (exists(changeLogPathUpper)) {\n      return changeLogPathUpper;\n    } else if (exists(changeLogPathLower)) {\n      return changeLogPathLower;\n    }\n    return changeLogPathUpper;\n  }\n\n  void generateReleaseNotes(sm.Version? newVersion, sm.Version? currentVersion,\n      {required bool autoAnswer, required bool dryrun}) {\n    // see https://blogs.sap.com/2018/06/22/generating-release-notes-from-git-commit-messages-using-basic-shell-commands-gitgrep/\n    // for better ideas.\n\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n\n    /// we use a .md as then user can preview the mark down.\n    final tmpReleaseNotes = join(pathToPackageRoot, 'release.notes.tmp.md');\n    // ignore: cascade_invocations\n    tmpReleaseNotes.write('# $newVersion');\n    final git = Git(pathToPackageRoot);\n    final usingGit = git.usingGit;\n\n    /// add commit messages to release notes.\n    if (usingGit) {\n      final lastTag = git.getLatestTag();\n\n      // just the messages from each commit\n      final messages = git.getCommitMessages(lastTag);\n\n      for (final message in messages) {\n        tmpReleaseNotes.append('- $message');\n      }\n      tmpReleaseNotes.append('');\n    }\n\n    /// append the changelog to the new release notes\n    read(changeLogPath).toList().forEach(tmpReleaseNotes.append);\n\n    // give the user a chance to clean up the change log.\n    if (!autoAnswer &&\n        !dryrun &&\n        confirm('Would you like to edit the $changeLogPath notes')) {\n      showEditor(tmpReleaseNotes);\n    }\n\n    // write the edited commit messages to the change log.\n    final backup = '$changeLogPath.bak';\n\n    /// move the change log out of the way.\n    move(changeLogPath, backup);\n\n    /// replace the newly updated change log over the old one.\n    move(tmpReleaseNotes, changeLogPath);\n\n    delete(backup);\n  }\n\n  /// checks with the user that we are operating on the correct package\n  /// and returns details of the packages pubspec.yaml.\n  ///\n  /// Also prints the version of the package we found.\n  ///\n  /// If [autoAnswer] is false we don't ask the user to confirm the package.\n  PubSpecDetails checkPackage({required bool autoAnswer}) {\n    final pubspecPath = findPubSpec(startingDir: pathToPackageRoot);\n    if (pubspecPath == null) {\n      print('Unable to find pubspec.yaml, run ${DartScript.self.exeName} '\n          'from the main '\n          \"package's root directory.\");\n      io.exit(1);\n    }\n\n    final pubspec = PubSpec.loadFromPath(pubspecPath);\n\n    pubspec.version.setSemVersion(pubspec.version.semVersion == sm.Version.none\n        ? sm.Version.parse('0.0.1')\n        : pubspec.version.semVersion);\n\n    print('');\n    print(green('Found ${pubspec.name.value} version ${pubspec.version}'));\n\n    print('');\n\n    return PubSpecDetails(pubspec, pubspecPath);\n  }\n\n  void commitRelease(\n    sm.Version newVersion,\n    String workingDirectory, {\n    required bool usingGit,\n    required bool autoAnswer,\n    required bool dryrun,\n  }) {\n    if (usingGit && !dryrun) {\n      final git = Git(workingDirectory);\n      print('Commiting all modified files.');\n      git\n        ..commitAll('Released $newVersion.')\n        ..pushReleaseTag(newVersion, autoAnswer: autoAnswer);\n    }\n  }\n\n  /// Runs the release process.\n  /// If we are running a dry run we back up key files that we have\n  /// to change for the pub.dev publish dry run to work but\n  /// which we don't actually want to changes as we are doing a dry run.\n  /// At the end of the dry run we restore these key files.\n  Future<void> doRun(\n      {required bool dryrun, required void Function() runRelease}) async {\n    if (dryrun) {\n      await withFileProtectionAsync([\n        join(pathToPackageRoot, 'pubspec.yaml'),\n        changeLogPath,\n        versionLibraryPath(pathToPackageRoot),\n      ], () async {\n        runRelease();\n      });\n    } else {\n      runRelease();\n    }\n  }\n\n  bool doRunTests(String projectRootPath,\n      {required String? tags, required String? excludeTags}) {\n    if (which('critical_test').notfound) {\n      print(blue('Installing dart package critical_test'));\n      'dart pub global activate critical_test'\n          .start(progress: Progress.printStdErr());\n    }\n    if (which('critical_test').notfound) {\n      printerr(\n          red('Please install the dart package critical_test and try again. '\n              '\"dart pub global activate critical_test\"'));\n      io.exit(1);\n    }\n    // critical_test generates a file to track failed tests\n    // add it to .gitignore so it doesn't look like an uncommitted\n    // file.\n    Git(projectRootPath).addGitIgnore('.failed_tracker');\n\n    var success = true;\n\n    if (!exists(join(projectRootPath, 'test'))) {\n      print(orange('No tests found in ${relative(projectRootPath)} skipping'));\n    } else {\n      final progress = startFromArgs(\n          exeName('critical_test'),\n          [\n            if (Settings().isVerbose) '-v',\n            if (tags != null) '--tags=$tags',\n            if (excludeTags != null) '--exclude-tags=$excludeTags',\n          ],\n          terminal: true,\n          workingDirectory: projectRootPath,\n          nothrow: true);\n\n      /// exitCode 5 means no test ran.\n      success = progress.exitCode == 0 || progress.exitCode == 5;\n      if (success) {\n        print(green('All unit tests passed.'));\n      }\n    }\n    return success;\n  }"} conflicts with {"offset":654,"length":13614,"replacement":"  String pathToPackageRoot;\n\n  /// git books writes out changelog.md as lower case. We also have the issue\n  /// that on Windows file names are case insensitive.\n  /// As such we look for both versions given the upper case version precedence.\n  late final changeLogPathUpper = join(pathToPackageRoot, 'CHANGELOG.md');\n\n  late final changeLogPathLower = join(pathToPackageRoot, 'changelog.md');\n\n  ReleaseRunner(this.pathToPackageRoot);\n\n  Future<bool> pubRelease({\n    required PubSpecDetails pubSpecDetails,\n    required VersionMethod versionMethod,\n    required int lineLength,\n    required bool format,\n    required bool dryrun,\n    required bool runTests,\n    required bool autoAnswer,\n    required String? tags,\n    required String? excludeTags,\n    required bool useGit,\n    sm.Version? setVersion,\n  }) async {\n    var success = false;\n    await doRun(\n        dryrun: dryrun,\n        runRelease: () async {\n          final projectRootPath = dirname(pubSpecDetails.path);\n\n          final newVersion = determineAndUpdateVersion(\n              versionMethod, setVersion, pubSpecDetails,\n              dryrun: dryrun);\n\n          runPubGet(projectRootPath);\n\n          if (runTests) {\n            if (!doRunTests(projectRootPath,\n                tags: tags, excludeTags: excludeTags)) {\n              throw UnitTestFailedException(\n                  'Some unit tests failed. Release has been halted.');\n            }\n          }\n\n          final usingGit = useGit && gitChecks(projectRootPath);\n\n          runPreReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n          prepareReleaseNotes(projectRootPath, newVersion,\n              pubSpecDetails.pubspec.version.semVersion,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n          prepareCode(projectRootPath, lineLength,\n              format: format, usingGit: usingGit);\n\n          commitRelease(newVersion, projectRootPath,\n              usingGit: usingGit, autoAnswer: autoAnswer, dryrun: dryrun);\n\n          // protect the pubspec.yaml as need to remove the\n          // overrides\n          await withFileProtectionAsync([pubSpecDetails.path], () async {\n            pubSpecDetails.removeOverrides();\n            success = publish(pubSpecDetails.path,\n                autoAnswer: autoAnswer, dryrun: dryrun);\n          });\n\n          runPostReleaseHooks(projectRootPath,\n              version: newVersion, dryrun: dryrun);\n\n          if (!success) {\n            printerr(red('The publish attempt failed.'));\n          }\n        });\n\n    return success;\n  }\n\n  /// Run pub get to ensure that the project is in a runnable state.\n  /// This may result in pubspec.lock being updated and\n  /// as we don't allow the project to have any uncommited files\n  /// we need to commit it.\n  /// It will almost certainly change if we are doing a multi-package\n  /// release as the dependencies we are releasing will have their version\n  /// no.s changed.\n  void runPubGet(String projectRootPath) {\n    if (DartSdk().isPubGetRequired(projectRootPath)) {\n      /// Make certain the project is in a state that we can run it.\n      print(blue(\"Running 'pub get' to ensure package is ready to publish\"));\n      DartSdk().runPubGet(projectRootPath, progress: Progress.devNull());\n    }\n  }\n\n  bool gitChecks(String projectRootPath) {\n    final git = Git(projectRootPath);\n    final usingGit = git.usingGit;\n    if (usingGit) {\n      print('Found git project.');\n      // we do a premptive git pull as we won't be able to do a push\n      // at the end if we are behind head.\n      if (git.hasRemote) {\n        git.pull();\n      } else {\n        print(orange('Skipping git pull as no remote has been defined.'));\n      }\n\n      // print('Checking files are committed.');\n      // git.checkAllFilesCommited();\n    }\n\n    return usingGit;\n  }\n\n  void prepareReleaseNotes(\n      String projectRootPath, sm.Version newVersion, sm.Version? currentVersion,\n      {required bool usingGit,\n      required bool autoAnswer,\n      required bool dryrun}) {\n    /// the change log is backed up as part of the dry run\n    /// and restored afterwoods.\n    if (!doReleaseNotesExist(newVersion)) {\n      print('Generating release notes.');\n      generateReleaseNotes(newVersion, currentVersion,\n          autoAnswer: autoAnswer, dryrun: dryrun);\n      if (!dryrun && usingGit) {\n        // final git = Git(projectRootPath);\n        // print('Committing release notes and versioned files');\n        // git.commitVersion(\"Released $newVersion\");\n\n        // if (git.hasRemote) {\n        //   git.push();\n        // }\n      }\n    }\n    //}\n  }\n\n  /// checks the change log to see if the release notes for [version]\n  /// have already been generated.\n  bool doReleaseNotesExist(sm.Version version) {\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n    final note = '# $version';\n\n    return read(changeLogPath).toList().join('\\n').contains(note);\n  }\n\n  /// Ensure that all code is correctly formatted.\n  /// and that it passes all tests.\n  void prepareCode(String projectRootPath, int lineLength,\n      {required bool format, required bool usingGit}) {\n    // ensure that all code is correctly formatted.\n    if (format) {\n      _formatCode(projectRootPath, usingGit: usingGit, lineLength: lineLength);\n    }\n\n    final progress = start('dart analyze',\n        workingDirectory: projectRootPath,\n        nothrow: true,\n        progress: Progress.print());\n    if (progress.exitCode != 0) {\n      printerr(\n          red('dart analyze failed. Please fix the errors and try again.'));\n      io.exit(1);\n    }\n  }\n\n  sm.Version determineAndUpdateVersion(\n    VersionMethod versionMethod,\n    sm.Version? passedVersion,\n    PubSpecDetails pubspecDetails, {\n    required bool dryrun,\n  }) {\n    var newVersion = passedVersion ?? pubspecDetails.pubspec.version.semVersion;\n\n    if (versionMethod == VersionMethod.set) {\n      // we were passed the new version so just updated everything.\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    } else {\n      // Ask the user for the new version\n      newVersion = askForVersion(pubspecDetails.pubspec.version.semVersion);\n      updateVersionFromDetails(newVersion, pubspecDetails);\n    }\n    return newVersion;\n  }\n\n  void _formatCode(String projectRootPath,\n      {required bool usingGit, required int lineLength}) {\n    // ensure that all code is correctly formatted.\n    print('Formatting code...');\n\n    _formatCodeInDirectory(\n        join(projectRootPath, 'bin'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'lib'), usingGit, lineLength, projectRootPath);\n    _formatCodeInDirectory(\n        join(projectRootPath, 'test'), usingGit, lineLength, projectRootPath);\n  }\n\n  void _formatCodeInDirectory(\n      String srcPath, bool usingGit, int lineLength, String workingDirectory) {\n    final output = <String>[];\n\n    if (exists(srcPath) && !isEmpty(srcPath)) {\n      'dart format --summary none --line-length=$lineLength $srcPath'\n          .forEach(output.add, stderr: print);\n\n      if (usingGit) {\n        for (final line in output) {\n          if (line.startsWith('Formatted')) {\n            final filePath = line.substring('Formatted '.length);\n            'git add ${join(srcPath, filePath)}'\n                .start(workingDirectory: workingDirectory);\n          }\n        }\n      }\n    }\n  }\n\n  bool publish(String pubspecPath,\n      {required bool autoAnswer, required bool dryrun}) {\n    final projectRoot = dirname(pubspecPath);\n\n    final version = sm.Version.parse(io.Platform.version.split(' ')[0]);\n    var cmd = 'dart pub publish';\n    if (version.major == 2 && version.minor < 9) {\n      cmd = 'pub publish';\n    }\n\n    if (dryrun) {\n      cmd += ' --dry-run';\n    }\n    if (autoAnswer && !dryrun) {\n      cmd += ' --force';\n    }\n\n    // if (!waitForEx(cli.check(cmd, workingDirectory: projectRoot))) {\n    //   throw PubReleaseException('The publish attempt failed.');\n    // }\n\n    final progress = cmd.start(\n        terminal: true,\n        workingDirectory: projectRoot,\n        progress: Progress.print(),\n        nothrow: true);\n\n    return progress.exitCode == 0;\n  }\n\n  String get changeLogPath {\n    if (exists(changeLogPathUpper)) {\n      return changeLogPathUpper;\n    } else if (exists(changeLogPathLower)) {\n      return changeLogPathLower;\n    }\n    return changeLogPathUpper;\n  }\n\n  void generateReleaseNotes(sm.Version? newVersion, sm.Version? currentVersion,\n      {required bool autoAnswer, required bool dryrun}) {\n    // see https://blogs.sap.com/2018/06/22/generating-release-notes-from-git-commit-messages-using-basic-shell-commands-gitgrep/\n    // for better ideas.\n\n    if (!exists(changeLogPath)) {\n      touch(changeLogPath, create: true);\n    }\n\n    /// we use a .md as then user can preview the mark down.\n    final tmpReleaseNotes = join(pathToPackageRoot, 'release.notes.tmp.md');\n    // ignore: cascade_invocations\n    tmpReleaseNotes.write('# $newVersion');\n    final git = Git(pathToPackageRoot);\n    final usingGit = git.usingGit;\n\n    /// add commit messages to release notes.\n    if (usingGit) {\n      final lastTag = git.getLatestTag();\n\n      // just the messages from each commit\n      final messages = git.getCommitMessages(lastTag);\n\n      for (final message in messages) {\n        tmpReleaseNotes.append('- $message');\n      }\n      tmpReleaseNotes.append('');\n    }\n\n    /// append the changelog to the new release notes\n    read(changeLogPath).toList().forEach(tmpReleaseNotes.append);\n\n    // give the user a chance to clean up the change log.\n    if (!autoAnswer &&\n        !dryrun &&\n        confirm('Would you like to edit the $changeLogPath notes')) {\n      showEditor(tmpReleaseNotes);\n    }\n\n    // write the edited commit messages to the change log.\n    final backup = '$changeLogPath.bak';\n\n    /// move the change log out of the way.\n    move(changeLogPath, backup);\n\n    /// replace the newly updated change log over the old one.\n    move(tmpReleaseNotes, changeLogPath);\n\n    delete(backup);\n  }\n\n  /// checks with the user that we are operating on the correct package\n  /// and returns details of the packages pubspec.yaml.\n  ///\n  /// Also prints the version of the package we found.\n  ///\n  /// If [autoAnswer] is false we don't ask the user to confirm the package.\n  PubSpecDetails checkPackage({required bool autoAnswer}) {\n    final pubspecPath = findPubSpec(startingDir: pathToPackageRoot);\n    if (pubspecPath == null) {\n      print('Unable to find pubspec.yaml, run ${DartScript.self.exeName} '\n          'from the main '\n          \"package's root directory.\");\n      io.exit(1);\n    }\n\n    final pubspec = PubSpec.loadFromPath(pubspecPath);\n\n    pubspec.version.setSemVersion(pubspec.version.semVersion == sm.Version.none\n        ? sm.Version.parse('0.0.1')\n        : pubspec.version.semVersion);\n\n    print('');\n    print(green('Found ${pubspec.name.value} version ${pubspec.version}'));\n\n    print('');\n\n    return PubSpecDetails(pubspec, pubspecPath);\n  }\n\n  void commitRelease(\n    sm.Version newVersion,\n    String workingDirectory, {\n    required bool usingGit,\n    required bool autoAnswer,\n    required bool dryrun,\n  }) {\n    if (usingGit && !dryrun) {\n      final git = Git(workingDirectory);\n      print('Commiting all modified files.');\n      git\n        ..commitAll('Released $newVersion.')\n        ..pushReleaseTag(newVersion, autoAnswer: autoAnswer);\n    }\n  }\n\n  /// Runs the release process.\n  /// If we are running a dry run we back up key files that we have\n  /// to change for the pub.dev publish dry run to work but\n  /// which we don't actually want to changes as we are doing a dry run.\n  /// At the end of the dry run we restore these key files.\n  Future<void> doRun(\n      {required bool dryrun, required void Function() runRelease}) async {\n    if (dryrun) {\n      await withFileProtectionAsync([\n        join(pathToPackageRoot, 'pubspec.yaml'),\n        changeLogPath,\n        versionLibraryPath(pathToPackageRoot),\n      ], () async {\n        runRelease();\n      });\n    } else {\n      runRelease();\n    }\n  }\n\n  bool doRunTests(String projectRootPath,\n      {required String? tags, required String? excludeTags}) {\n    if (which('critical_test').notfound) {\n      print(blue('Installing dart package critical_test'));\n      'dart pub global activate critical_test'\n          .start(progress: Progress.printStdErr());\n    }\n    if (which('critical_test').notfound) {\n      printerr(\n          red('Please install the dart package critical_test and try again. '\n              '\"dart pub global activate critical_test\"'));\n      io.exit(1);\n    }\n    // critical_test generates a file to track failed tests\n    // add it to .gitignore so it doesn't look like an uncommitted\n    // file.\n    Git(projectRootPath).addGitIgnore('.failed_tracker');\n\n    var success = true;\n\n    if (!exists(join(projectRootPath, 'test'))) {\n      print(orange('No tests found in ${relative(projectRootPath)} skipping'));\n    } else {\n      final progress = startFromArgs(\n          exeName('critical_test'),\n          [\n            if (Settings().isVerbose) '-v',\n            if (tags != null) '--tags=$tags',\n            if (excludeTags != null) '--exclude-tags=$excludeTags',\n          ],\n          terminal: true,\n          workingDirectory: projectRootPath,\n          nothrow: true);\n\n      /// exitCode 5 means no test ran.\n      success = progress.exitCode == 0 || progress.exitCode == 5;\n      if (success) {\n        print(green('All unit tests passed.'));\n      }\n    }\n    return success;\n  }"}
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:24:36.494082 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:24:36.494082
[ReorderMembersFix] 2025-10-19T11:25:15.185648 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:15.185648 ConflictingEditException: {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"} conflicts with {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"}
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:15.185648 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:15.185648
[ReorderMembersFix] 2025-10-19T11:25:15.186862 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:15.186862 ConflictingEditException: {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"} conflicts with {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"}
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:15.186862 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:15.186862
[ReorderMembersFix] 2025-10-19T11:25:16.376400 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:16.376400 ConflictingEditException: {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"} conflicts with {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"}
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:16.376400 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:16.376400
[ReorderMembersFix] 2025-10-19T11:25:16.376739 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:16.376739 ConflictingEditException: {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"} conflicts with {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"}
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:16.376739 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:16.376739
[ReorderMembersFix] 2025-10-19T11:25:17.698534 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:17.698534 ConflictingEditException: {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"} conflicts with {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"}
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:17.698534 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:17.698534
[ReorderMembersFix] 2025-10-19T11:25:17.699066 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:17.699066 ConflictingEditException: {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"} conflicts with {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"}
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:17.699066 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:17.699066
[ReorderMembersFix] 2025-10-19T11:25:18.062908 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:18.062908 ConflictingEditException: {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"} conflicts with {"offset":3556,"length":95,"replacement":"  String message;\n\n  GitHubException(this.message);\n\n  @override\n  String toString() => message;"}
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:18.062908 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:18.062908
[ReorderMembersFix] 2025-10-19T11:25:18.063402 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/pub_release/lib/src/simple_github.dart:
[ReorderMembersFix] 2025-10-19T11:25:18.063402 ConflictingEditException: {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"} conflicts with {"offset":337,"length":3170,"replacement":"  final String username;\n\n  final String apiToken;\n\n  final String owner;\n\n  final String repository;\n\n  late GitHub _github;\n\n  late RepositorySlug _repositorySlug;\n\n  late RepositoriesService _repoService;\n\n  SimpleGitHub(\n      {required this.username,\n      required this.apiToken,\n      required this.owner,\n      required this.repository});\n\n  void auth() {\n    //var github = GitHub(auth: findAuthenticationFromEnvironment());\n    _github = GitHub(auth: Authentication.basic(username, apiToken));\n\n    _repositorySlug = RepositorySlug(owner, repository);\n\n    _repoService = RepositoriesService(_github);\n  }\n\n  /// You must call this once you have finished to close the connection\n  /// to git hub.\n\n  void dispose() {\n    _github.dispose();\n  }\n\n  ///\n  /// Creates a git hub release and returns the created release.\n  ///\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> release({required String? tagName})  =>\n      _release(tagName: tagName);\n\n  /// Throws a GitHubException if the given tagName already exists.\n  Future<Release> _release({required String? tagName}) async {\n    final createRelease = CreateRelease(tagName);\n\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {}\n\n    if (release == null) {\n      release =\n          await _repoService.createRelease(_repositorySlug, createRelease);\n    } else {\n      throw GitHubException('A release with tagName $tagName already exists');\n    }\n\n    return release;\n  }\n\n  Future<Release?> getReleaseByTagName({required String? tagName})  =>\n      _getByTagName(tagName: tagName);\n\n  Future<Release?> _getByTagName({required String? tagName}) async {\n    Release? release;\n    try {\n      Settings().verbose('search for $tagName of $_repositorySlug');\n      release =\n          await _repoService.getReleaseByTagName(_repositorySlug, tagName);\n    } on ReleaseNotFound catch (_) {\n      // no op - we return null\n      print('ReleaseNotFound');\n    }\n\n    return release;\n  }\n\n  void attachAssetFromFile({\n    required Release release,\n    required String assetName,\n    required String assetPath,\n    required String mimeType,\n    String? assetLabel,\n  }) {\n    final assetData = File(assetPath).readAsBytesSync();\n\n    final installAsset = CreateReleaseAsset(\n      name: assetName,\n      contentType: mimeType,\n      assetData: assetData,\n      label: assetLabel,\n    );\n    // ignore: discarded_futures\n    _repoService.uploadReleaseAssets(release, [installAsset]);\n  }\n\n  void deleteRelease(Release release) {\n    // ignore: discarded_futures\n    _repoService.deleteRelease(_repositorySlug, release);\n  }\n\n  void deleteTag(String tagName) {\n    GitService(_github)\n        // ignore: discarded_futures\n        .deleteReference(_repositorySlug, 'tags/$tagName');\n  }\n\n  void listReferences() {\n    final gitService = GitService(_github);\n    gitService\n        .listReferences(_repositorySlug, type: 'tags')\n        // ignore: discarded_futures\n        .forEach((ref) => print(ref.ref));\n  }"}
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-19T11:25:18.063402 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-19T11:25:18.063402
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 Plugin fields_first_constructors_next threw while analyzing /home/bsutton/git/pub_release/bin/delete.dart:
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 Bad state: No type: .listReferences()
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #0      ExpressionImplExtension.typeOrThrow (package:analyzer/src/dart/ast/extensions.dart:161:7)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #1      MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:147:38)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #2      ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #3      ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #4      MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #5      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #6      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #7      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #8      ResolverVisitor.visitCascadeExpression (package:analyzer/src/generated/resolver.dart:1990:7)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #9      CascadeExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:2256:14)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #10     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #11     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #12     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #13     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #14     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #15     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #16     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #17     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #18     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #19     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #20     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #21     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #22     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #23     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #24     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #25     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #26     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #27     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #28     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #29     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #30     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #31     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #32     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #33     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #34     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #35     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #36     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #37     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #38     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #39     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #40     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #41     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #42     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #43     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #44     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #45     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 #46     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
[fields_first_constructors_next] 2025-10-19T11:28:36.422819 <asynchronous suspension>
[fields_first_constructors_next] 2025-10-19T11:28:36.422819
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:Bad state: No type: .listReferences()
#0      ExpressionImplExtension.typeOrThrow (package:analyzer/src/dart/ast/extensions.dart:161:7)
#1      MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:147:38)
#2      ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#3      ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#4      MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#5      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#6      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#7      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#8      ResolverVisitor.visitCascadeExpression (package:analyzer/src/generated/resolver.dart:1990:7)
#9      CascadeExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:2256:14)
#10     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#11     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#12     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#13     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#14     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#15     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#16     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#17     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#18     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#19     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#20     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#21     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#22     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#23     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#24     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#25     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#26     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#27     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#28     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
#29     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
#30     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
#31     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
#32     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
#33     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
#34     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
#35     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#36     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
#37     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
#38     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#39     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
#40     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
#41     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
#42     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
#43     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#44     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
#45     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
#46     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
<asynchronous suspension>

at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[fields_first_constructors_next] 2025-10-19T11:31:41.904086 Plugin fields_first_constructors_next threw while analyzing /home/bsutton/git/pub_release/test/git_hub_release_test.dart:
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 RangeError (length): Invalid value: Valid value range is empty: 0
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #0      List.[] (dart:core-patch/growable_array.dart)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 #81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
[fields_first_constructors_next] 2025-10-19T11:31:41.904086 <asynchronous suspension>
[fields_first_constructors_next] 2025-10-19T11:31:41.904086
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:RangeError (length): Invalid value: Valid value range is empty: 0
#0      List.[] (dart:core-patch/growable_array.dart)
#1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
#2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
#3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
#4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
#14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
#15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
#16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
#17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
#18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
#32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
#33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
#34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
#35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
#36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
#37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
#44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
#45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
#64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
#65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
#66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
#67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
#68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
#69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
#70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
#72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
#73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
#75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
#76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
#77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
#78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
#80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
#81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
<asynchronous suspension>

at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[fields_first_constructors_next] 2025-10-19T11:31:42.456016 Plugin fields_first_constructors_next threw while analyzing /home/bsutton/git/pub_release/test/git_hub_release_test.dart:
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 RangeError (length): Invalid value: Valid value range is empty: 0
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #0      List.[] (dart:core-patch/growable_array.dart)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 #81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
[fields_first_constructors_next] 2025-10-19T11:31:42.456016 <asynchronous suspension>
[fields_first_constructors_next] 2025-10-19T11:31:42.456016
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:RangeError (length): Invalid value: Valid value range is empty: 0
#0      List.[] (dart:core-patch/growable_array.dart)
#1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
#2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
#3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
#4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
#14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
#15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
#16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
#17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
#18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
#32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
#33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
#34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
#35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
#36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
#37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
#44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
#45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
#64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
#65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
#66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
#67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
#68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
#69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
#70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
#72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
#73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
#75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
#76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
#77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
#78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
#80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
#81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
<asynchronous suspension>

at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[fields_first_constructors_next] 2025-10-19T11:31:42.666933 Plugin fields_first_constructors_next threw while analyzing /home/bsutton/git/pub_release/test/git_hub_release_test.dart:
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 RangeError (length): Invalid value: Valid value range is empty: 0
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #0      List.[] (dart:core-patch/growable_array.dart)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 #81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
[fields_first_constructors_next] 2025-10-19T11:31:42.666933 <asynchronous suspension>
[fields_first_constructors_next] 2025-10-19T11:31:42.666933
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:RangeError (length): Invalid value: Valid value range is empty: 0
#0      List.[] (dart:core-patch/growable_array.dart)
#1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
#2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
#3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
#4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
#14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
#15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
#16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
#17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
#18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
#32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
#33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
#34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
#35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
#36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
#37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
#44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
#45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
#64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
#65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
#66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
#67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
#68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
#69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
#70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
#72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
#73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
#75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
#76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
#77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
#78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
#80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
#81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
<asynchronous suspension>

at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[fields_first_constructors_next] 2025-10-19T11:31:42.787358 Plugin fields_first_constructors_next threw while analyzing /home/bsutton/git/pub_release/test/git_hub_release_test.dart:
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 RangeError (length): Invalid value: Valid value range is empty: 0
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #0      List.[] (dart:core-patch/growable_array.dart)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 #81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
[fields_first_constructors_next] 2025-10-19T11:31:42.787358 <asynchronous suspension>
[fields_first_constructors_next] 2025-10-19T11:31:42.787358
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:RangeError (length): Invalid value: Valid value range is empty: 0
#0      List.[] (dart:core-patch/growable_array.dart)
#1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
#2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
#3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
#4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
#14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
#15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
#16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
#17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
#18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
#32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
#33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
#34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
#35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
#36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
#37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
#44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
#45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
#64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
#65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
#66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
#67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
#68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
#69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
#70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
#72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
#73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
#75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
#76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
#77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
#78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
#80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
#81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
<asynchronous suspension>

at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[fields_first_constructors_next] 2025-10-19T11:31:43.001524 Plugin fields_first_constructors_next threw while analyzing /home/bsutton/git/pub_release/test/git_hub_release_test.dart:
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 RangeError (length): Invalid value: Valid value range is empty: 0
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #0      List.[] (dart:core-patch/growable_array.dart)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 #81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
[fields_first_constructors_next] 2025-10-19T11:31:43.001524 <asynchronous suspension>
[fields_first_constructors_next] 2025-10-19T11:31:43.001524
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:RangeError (length): Invalid value: Valid value range is empty: 0
#0      List.[] (dart:core-patch/growable_array.dart)
#1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
#2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
#3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
#4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#13     ResolverVisitor.dispatchStatement (package:analyzer/src/generated/resolver.dart:804:15)
#14     TypeAnalyzer._analyzeIfCommon (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:2397:5)
#15     TypeAnalyzer.analyzeIfStatement (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:764:5)
#16     ResolverVisitor.visitIfStatement (package:analyzer/src/generated/resolver.dart:2836:7)
#17     IfStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:9917:50)
#18     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#19     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#20     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#21     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#22     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#23     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#24     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#25     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#26     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#27     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#28     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#29     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#30     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#31     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
#32     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
#33     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
#34     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
#35     MethodInvocationResolver._resolveReceiverPrefix (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:819:7)
#36     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:104:16)
#37     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#38     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#39     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#40     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#41     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#42     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#43     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
#44     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
#45     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#46     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#47     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#48     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#49     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#50     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#51     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#52     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#53     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#54     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#55     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#56     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#57     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#58     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#59     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#60     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#61     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#62     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#63     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
#64     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
#65     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
#66     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
#67     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
#68     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
#69     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
#70     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#71     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
#72     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
#73     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#74     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
#75     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
#76     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
#77     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
#78     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#79     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
#80     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
#81     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
<asynchronous suspension>

at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

[fields_first_constructors_next] 2025-10-19T11:32:00.036273 Plugin fields_first_constructors_next threw while analyzing /home/bsutton/git/pub_release/test/pubspec_test.dart:
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 RangeError (length): Invalid value: Valid value range is empty: 0
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #0      List.[] (dart:core-patch/growable_array.dart)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #13     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #14     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #15     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #16     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #17     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #18     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #19     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #20     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #21     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #22     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #23     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #24     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #25     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #26     MethodInvocationResolver._resolveReceiverNull (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:672:9)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #27     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:97:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #28     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #29     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #30     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #31     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #32     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #33     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #34     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #35     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #36     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #37     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #38     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #39     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #40     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #41     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #42     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #43     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #44     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #45     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #46     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #47     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #48     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #49     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #50     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #51     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #52     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #53     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #54     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #55     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #56     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #57     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #58     MethodInvocationResolver._resolveReceiverNull (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:672:9)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #59     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:97:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #60     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #61     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #62     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #63     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #64     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #65     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #66     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #67     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #68     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #69     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #70     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #71     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #72     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #73     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #74     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #75     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #76     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #77     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #78     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #79     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #80     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #81     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #82     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #83     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #84     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #85     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #86     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #87     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #88     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #89     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #90     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #91     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #92     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #93     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #94     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #95     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #96     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #97     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #98     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 #99     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
[fields_first_constructors_next] 2025-10-19T11:32:00.036273 <asynchronous suspension>
[fields_first_constructors_next] 2025-10-19T11:32:00.036273
The request analysis.updateContent failed with the following error:
RequestErrorCode.PLUGIN_ERROR
A request threw the exception:RangeError (length): Invalid value: Valid value range is empty: 0
#0      List.[] (dart:core-patch/growable_array.dart)
#1      ResolverVisitor.checkForArgumentTypesNotAssignableInList (package:analyzer/src/generated/resolver.dart:501:73)
#2      ResolverVisitor.visitDotShorthandInvocation (package:analyzer/src/generated/resolver.dart:2306:5)
#3      DotShorthandInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:5463:14)
#4      ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#5      TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#6      ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#7      ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#8      ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#9      NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#10     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#11     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#12     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#13     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#14     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#15     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#16     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#17     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#18     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#19     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#20     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#21     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#22     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
#23     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
#24     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
#25     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
#26     MethodInvocationResolver._resolveReceiverNull (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:672:9)
#27     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:97:14)
#28     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#29     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#30     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#31     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#32     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#33     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#34     ResolverVisitor.visitAwaitExpression (package:analyzer/src/generated/resolver.dart:1903:5)
#35     AwaitExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:1793:14)
#36     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#37     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#38     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#39     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#40     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#41     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#42     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#43     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#44     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#45     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#46     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#47     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#48     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#49     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#50     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#51     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#52     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#53     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#54     InvocationInferrer._resolveDeferredFunctionLiterals (package:analyzer/src/dart/resolver/invocation_inferrer.dart:530:16)
#55     FullInvocationInferrer.resolveInvocation (package:analyzer/src/dart/resolver/invocation_inferrer.dart:283:9)
#56     InvocationInferenceHelper.resolveMethodInvocation (package:analyzer/src/dart/resolver/invocation_inference_helper.dart:196:7)
#57     MethodInvocationResolver._setResolution (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:1303:24)
#58     MethodInvocationResolver._resolveReceiverNull (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:672:9)
#59     MethodInvocationResolver.resolve (package:analyzer/src/dart/resolver/method_invocation_resolver.dart:97:14)
#60     ElementResolver.visitMethodInvocation (package:analyzer/src/generated/element_resolver.dart:282:38)
#61     ResolverVisitor.visitMethodInvocation (package:analyzer/src/generated/resolver.dart:3106:43)
#62     MethodInvocationImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:12481:14)
#63     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#64     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#65     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#66     ResolverVisitor.visitExpressionStatement (package:analyzer/src/generated/resolver.dart:2511:5)
#67     ExpressionStatementImpl.accept (package:analyzer/src/dart/ast/ast.dart:6577:50)
#68     NodeListImpl.accept (package:analyzer/src/dart/ast/ast.dart:13245:20)
#69     BlockImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:2034:17)
#70     ResolverVisitor.visitBlock (package:analyzer/src/generated/resolver.dart:1930:10)
#71     BlockImpl.accept (package:analyzer/src/dart/ast/ast.dart:2030:50)
#72     BlockFunctionBodyImpl.visitChildren (package:analyzer/src/dart/ast/ast.dart:1990:12)
#73     ResolverVisitor.visitBlockFunctionBody (package:analyzer/src/generated/resolver.dart:1942:12)
#74     BlockFunctionBodyImpl.resolve (package:analyzer/src/dart/ast/ast.dart:1986:16)
#75     FunctionExpressionResolver.resolve (package:analyzer/src/dart/resolver/function_expression_resolver.dart:53:29)
#76     ResolverVisitor.visitFunctionExpression (package:analyzer/src/generated/resolver.dart:2713:33)
#77     FunctionExpressionImpl.resolveExpression (package:analyzer/src/dart/ast/ast.dart:8809:14)
#78     ResolverVisitor.dispatchExpression (package:analyzer/src/generated/resolver.dart:745:16)
#79     TypeAnalyzer.analyzeExpression (package:_fe_analyzer_shared/src/type_inference/type_analyzer.dart:568:43)
#80     ResolverVisitor.analyzeExpression (package:analyzer/src/generated/resolver.dart:452:18)
#81     ResolverVisitor.visitFunctionDeclaration (package:analyzer/src/generated/resolver.dart:2672:7)
#82     FunctionDeclarationImpl.accept (package:analyzer/src/dart/ast/ast.dart:8638:50)
#83     ResolverVisitor.visitCompilationUnit (package:analyzer/src/generated/resolver.dart:2075:25)
#84     CompilationUnitImpl.accept (package:analyzer/src/dart/ast/ast.dart:3606:50)
#85     LibraryAnalyzer._resolveFile (package:analyzer/src/dart/analysis/library_analyzer.dart:893:10)
#86     LibraryAnalyzer._parseAndResolve (package:analyzer/src/dart/analysis/library_analyzer.dart:692:7)
#87     LibraryAnalyzer.analyze.<anonymous closure> (package:analyzer/src/dart/analysis/library_analyzer.dart:122:7)
#88     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#89     LibraryAnalyzer.analyze (package:analyzer/src/dart/analysis/library_analyzer.dart:121:17)
#90     AnalysisDriver._analyzeFileImpl.<anonymous closure>.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1417:13)
#91     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#92     AnalysisDriver._analyzeFileImpl.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1406:35)
#93     PerformanceLog.run (package:analyzer/src/dart/analysis/performance_logger.dart:38:15)
#94     AnalysisDriver._analyzeFileImpl (package:analyzer/src/dart/analysis/driver.dart:1348:20)
#95     AnalysisDriver._analyzeFile.<anonymous closure> (package:analyzer/src/dart/analysis/driver.dart:1325:9)
#96     OperationPerformanceImpl.run (package:analyzer/src/util/performance/operation_performance.dart:155:23)
#97     AnalysisDriver._analyzeFile (package:analyzer/src/dart/analysis/driver.dart:1322:38)
#98     AnalysisDriver.performWork (package:analyzer/src/dart/analysis/driver.dart:1217:7)
#99     AnalysisDriverScheduler._run (package:analyzer/src/dart/analysis/driver.dart:2659:24)
<asynchronous suspension>

at:
#0      SocketCustomLintServerToClientChannel.sendCustomLintRequest (package:custom_lint/src/v2/server_to_client_channel.dart:273)
<asynchronous suspension>
#1      SocketCustomLintServerToClientChannel.sendAnalyzerPluginRequest (package:custom_lint/src/v2/server_to_client_channel.dart:234)
<asynchronous suspension>
#2      CustomLintServer._handleRequest.<anonymous closure>.<anonymous closure> (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:192)
<asynchronous suspension>
#3      PendingOperation.run (package:custom_lint/src/async_operation.dart:22)
<asynchronous suspension>
#4      CustomLintServer._handleRequest (package:custom_lint/src/v2/custom_lint_analyzer_plugin.dart:175)
<asynchronous suspension>

